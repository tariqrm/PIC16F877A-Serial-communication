

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jan 24 10:58:25 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0004                     fsr             equ	4
    54     0004                     fsr0            equ	4
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0002                     pc              equ	2
    58     0002                     pcl             equ	2
    59     000A                     pclath          equ	10
    60     0003                     status          equ	3
    61     0000                     INDF            equ	0	;# 
    62     0001                     TMR0            equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR             equ	4	;# 
    66     0005                     PORTA           equ	5	;# 
    67     0006                     PORTB           equ	6	;# 
    68     0007                     PORTC           equ	7	;# 
    69     0008                     PORTD           equ	8	;# 
    70     0009                     PORTE           equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PIR1            equ	12	;# 
    74     000D                     PIR2            equ	13	;# 
    75     000E                     TMR1            equ	14	;# 
    76     000E                     TMR1L           equ	14	;# 
    77     000F                     TMR1H           equ	15	;# 
    78     0010                     T1CON           equ	16	;# 
    79     0011                     TMR2            equ	17	;# 
    80     0012                     T2CON           equ	18	;# 
    81     0013                     SSPBUF          equ	19	;# 
    82     0014                     SSPCON          equ	20	;# 
    83     0015                     CCPR1           equ	21	;# 
    84     0015                     CCPR1L          equ	21	;# 
    85     0016                     CCPR1H          equ	22	;# 
    86     0017                     CCP1CON         equ	23	;# 
    87     0018                     RCSTA           equ	24	;# 
    88     0019                     TXREG           equ	25	;# 
    89     001A                     RCREG           equ	26	;# 
    90     001B                     CCPR2           equ	27	;# 
    91     001B                     CCPR2L          equ	27	;# 
    92     001C                     CCPR2H          equ	28	;# 
    93     001D                     CCP2CON         equ	29	;# 
    94     001E                     ADRESH          equ	30	;# 
    95     001F                     ADCON0          equ	31	;# 
    96     0081                     OPTION_REG      equ	129	;# 
    97     0085                     TRISA           equ	133	;# 
    98     0086                     TRISB           equ	134	;# 
    99     0087                     TRISC           equ	135	;# 
   100     0088                     TRISD           equ	136	;# 
   101     0089                     TRISE           equ	137	;# 
   102     008C                     PIE1            equ	140	;# 
   103     008D                     PIE2            equ	141	;# 
   104     008E                     PCON            equ	142	;# 
   105     0091                     SSPCON2         equ	145	;# 
   106     0092                     PR2             equ	146	;# 
   107     0093                     SSPADD          equ	147	;# 
   108     0094                     SSPSTAT         equ	148	;# 
   109     0098                     TXSTA           equ	152	;# 
   110     0099                     SPBRG           equ	153	;# 
   111     009C                     CMCON           equ	156	;# 
   112     009D                     CVRCON          equ	157	;# 
   113     009E                     ADRESL          equ	158	;# 
   114     009F                     ADCON1          equ	159	;# 
   115     010C                     EEDATA          equ	268	;# 
   116     010D                     EEADR           equ	269	;# 
   117     010E                     EEDATH          equ	270	;# 
   118     010F                     EEADRH          equ	271	;# 
   119     018C                     EECON1          equ	396	;# 
   120     018D                     EECON2          equ	397	;# 
   121     0000                     INDF            equ	0	;# 
   122     0001                     TMR0            equ	1	;# 
   123     0002                     PCL             equ	2	;# 
   124     0003                     STATUS          equ	3	;# 
   125     0004                     FSR             equ	4	;# 
   126     0005                     PORTA           equ	5	;# 
   127     0006                     PORTB           equ	6	;# 
   128     0007                     PORTC           equ	7	;# 
   129     0008                     PORTD           equ	8	;# 
   130     0009                     PORTE           equ	9	;# 
   131     000A                     PCLATH          equ	10	;# 
   132     000B                     INTCON          equ	11	;# 
   133     000C                     PIR1            equ	12	;# 
   134     000D                     PIR2            equ	13	;# 
   135     000E                     TMR1            equ	14	;# 
   136     000E                     TMR1L           equ	14	;# 
   137     000F                     TMR1H           equ	15	;# 
   138     0010                     T1CON           equ	16	;# 
   139     0011                     TMR2            equ	17	;# 
   140     0012                     T2CON           equ	18	;# 
   141     0013                     SSPBUF          equ	19	;# 
   142     0014                     SSPCON          equ	20	;# 
   143     0015                     CCPR1           equ	21	;# 
   144     0015                     CCPR1L          equ	21	;# 
   145     0016                     CCPR1H          equ	22	;# 
   146     0017                     CCP1CON         equ	23	;# 
   147     0018                     RCSTA           equ	24	;# 
   148     0019                     TXREG           equ	25	;# 
   149     001A                     RCREG           equ	26	;# 
   150     001B                     CCPR2           equ	27	;# 
   151     001B                     CCPR2L          equ	27	;# 
   152     001C                     CCPR2H          equ	28	;# 
   153     001D                     CCP2CON         equ	29	;# 
   154     001E                     ADRESH          equ	30	;# 
   155     001F                     ADCON0          equ	31	;# 
   156     0081                     OPTION_REG      equ	129	;# 
   157     0085                     TRISA           equ	133	;# 
   158     0086                     TRISB           equ	134	;# 
   159     0087                     TRISC           equ	135	;# 
   160     0088                     TRISD           equ	136	;# 
   161     0089                     TRISE           equ	137	;# 
   162     008C                     PIE1            equ	140	;# 
   163     008D                     PIE2            equ	141	;# 
   164     008E                     PCON            equ	142	;# 
   165     0091                     SSPCON2         equ	145	;# 
   166     0092                     PR2             equ	146	;# 
   167     0093                     SSPADD          equ	147	;# 
   168     0094                     SSPSTAT         equ	148	;# 
   169     0098                     TXSTA           equ	152	;# 
   170     0099                     SPBRG           equ	153	;# 
   171     009C                     CMCON           equ	156	;# 
   172     009D                     CVRCON          equ	157	;# 
   173     009E                     ADRESL          equ	158	;# 
   174     009F                     ADCON1          equ	159	;# 
   175     010C                     EEDATA          equ	268	;# 
   176     010D                     EEADR           equ	269	;# 
   177     010E                     EEDATH          equ	270	;# 
   178     010F                     EEADRH          equ	271	;# 
   179     018C                     EECON1          equ	396	;# 
   180     018D                     EECON2          equ	397	;# 
   181                           
   182                           	psect	stringtext
   183     0800                     __pstringtext:
   184     0800                     stringtab:
   185     0800                     __stringtab:
   186                           
   187                           ;	String table - string pointers are 2 bytes each
   188     0800  1BFF               	btfsc	btemp+1,7
   189     0801  280A               	ljmp	stringcode
   190     0802  1383               	bcf	3,7
   191     0803  187F               	btfsc	btemp+1,0
   192     0804  1783               	bsf	3,7
   193     0805  0800               	movf	0,w
   194     0806  0A84               	incf	4,f
   195     0807  1903               	skipnz
   196     0808  0AFF               	incf	btemp+1,f
   197     0809  0008               	return
   198     080A                     stringcode:
   199     080A  087F               	movf	btemp+1,w
   200     080B  397F               	andlw	127
   201     080C  008A               	movwf	10
   202     080D  0804               	movf	4,w
   203     080E  0A84               	incf	4,f
   204     080F  1903               	skipnz
   205     0810  0AFF               	incf	btemp+1,f
   206     0811  0082               	movwf	2
   207     0812                     __stringbase:
   208     0812                     __end_of__stringtab:
   209     0812                     main@text:
   210     0812  3454               	retlw	84
   211     0813  3468               	retlw	104
   212     0814  3465               	retlw	101
   213     0815  3420               	retlw	32
   214     0816  344D               	retlw	77
   215     0817  3441               	retlw	65
   216     0818  3458               	retlw	88
   217     0819  3436               	retlw	54
   218     081A  3439               	retlw	57
   219     081B  3435               	retlw	53
   220     081C  3432               	retlw	50
   221     081D  3420               	retlw	32
   222     081E  3469               	retlw	105
   223     081F  3473               	retlw	115
   224     0820  3420               	retlw	32
   225     0821  3461               	retlw	97
   226     0822  3420               	retlw	32
   227     0823  3463               	retlw	99
   228     0824  346F               	retlw	111
   229     0825  346D               	retlw	109
   230     0826  3470               	retlw	112
   231     0827  3461               	retlw	97
   232     0828  3463               	retlw	99
   233     0829  3474               	retlw	116
   234     082A  3420               	retlw	32
   235     082B  3473               	retlw	115
   236     082C  3465               	retlw	101
   237     082D  3472               	retlw	114
   238     082E  3469               	retlw	105
   239     082F  3461               	retlw	97
   240     0830  346C               	retlw	108
   241     0831  3420               	retlw	32
   242     0832  3469               	retlw	105
   243     0833  346E               	retlw	110
   244     0834  3470               	retlw	112
   245     0835  3475               	retlw	117
   246     0836  3474               	retlw	116
   247     0837  342F               	retlw	47
   248     0838  346F               	retlw	111
   249     0839  3475               	retlw	117
   250     083A  3474               	retlw	116
   251     083B  3470               	retlw	112
   252     083C  3475               	retlw	117
   253     083D  3474               	retlw	116
   254     083E  3420               	retlw	32
   255     083F  3464               	retlw	100
   256     0840  3469               	retlw	105
   257     0841  3473               	retlw	115
   258     0842  3470               	retlw	112
   259     0843  346C               	retlw	108
   260     0844  3461               	retlw	97
   261     0845  3479               	retlw	121
   262     0846  3420               	retlw	32
   263     0847  3464               	retlw	100
   264     0848  3472               	retlw	114
   265     0849  3469               	retlw	105
   266     084A  3476               	retlw	118
   267     084B  3465               	retlw	101
   268     084C  3472               	retlw	114
   269     084D  3420               	retlw	32
   270     084E  3464               	retlw	100
   271     084F  3465               	retlw	101
   272     0850  3473               	retlw	115
   273     0851  3469               	retlw	105
   274     0852  3467               	retlw	103
   275     0853  346E               	retlw	110
   276     0854  3465               	retlw	101
   277     0855  3464               	retlw	100
   278     0856  3420               	retlw	32
   279     0857  3474               	retlw	116
   280     0858  346F               	retlw	111
   281     0859  3420               	retlw	32
   282     085A  3469               	retlw	105
   283     085B  346E               	retlw	110
   284     085C  3474               	retlw	116
   285     085D  3465               	retlw	101
   286     085E  3472               	retlw	114
   287     085F  3466               	retlw	102
   288     0860  3461               	retlw	97
   289     0861  3463               	retlw	99
   290     0862  3465               	retlw	101
   291     0863  3420               	retlw	32
   292     0864  346D               	retlw	109
   293     0865  3469               	retlw	105
   294     0866  3463               	retlw	99
   295     0867  3472               	retlw	114
   296     0868  346F               	retlw	111
   297     0869  3463               	retlw	99
   298     086A  346F               	retlw	111
   299     086B  346E               	retlw	110
   300     086C  3474               	retlw	116
   301     086D  3472               	retlw	114
   302     086E  346F               	retlw	111
   303     086F  346C               	retlw	108
   304     0870  346C               	retlw	108
   305     0871  3465               	retlw	101
   306     0872  3472               	retlw	114
   307     0873  3473               	retlw	115
   308     0874  3420               	retlw	32
   309     0875  3477               	retlw	119
   310     0876  3469               	retlw	105
   311     0877  3474               	retlw	116
   312     0878  3468               	retlw	104
   313     0879  3420               	retlw	32
   314     087A  3464               	retlw	100
   315     087B  346F               	retlw	111
   316     087C  3474               	retlw	116
   317     087D  342D               	retlw	45
   318     087E  346D               	retlw	109
   319     087F  3461               	retlw	97
   320     0880  3474               	retlw	116
   321     0881  3472               	retlw	114
   322     0882  3469               	retlw	105
   323     0883  3478               	retlw	120
   324     0884  3420               	retlw	32
   325     0885  344C               	retlw	76
   326     0886  3445               	retlw	69
   327     0887  3444               	retlw	68
   328     0888  3420               	retlw	32
   329     0889  3464               	retlw	100
   330     088A  3469               	retlw	105
   331     088B  3473               	retlw	115
   332     088C  3470               	retlw	112
   333     088D  346C               	retlw	108
   334     088E  3461               	retlw	97
   335     088F  3479               	retlw	121
   336     0890  3473               	retlw	115
   337     0891  342E               	retlw	46
   338     0892  3420               	retlw	32
   339     0893  3454               	retlw	84
   340     0894  3468               	retlw	104
   341     0895  3469               	retlw	105
   342     0896  3473               	retlw	115
   343     0897  3420               	retlw	32
   344     0898  3463               	retlw	99
   345     0899  3468               	retlw	104
   346     089A  3469               	retlw	105
   347     089B  3470               	retlw	112
   348     089C  3420               	retlw	32
   349     089D  3473               	retlw	115
   350     089E  3475               	retlw	117
   351     089F  3470               	retlw	112
   352     08A0  3470               	retlw	112
   353     08A1  346F               	retlw	111
   354     08A2  3472               	retlw	114
   355     08A3  3474               	retlw	116
   356     08A4  3473               	retlw	115
   357     08A5  3420               	retlw	32
   358     08A6  3453               	retlw	83
   359     08A7  3450               	retlw	80
   360     08A8  3449               	retlw	73
   361     08A9  3420               	retlw	32
   362     08AA  3461               	retlw	97
   363     08AB  346E               	retlw	110
   364     08AC  3464               	retlw	100
   365     08AD  3420               	retlw	32
   366     08AE  3476               	retlw	118
   367     08AF  3461               	retlw	97
   368     08B0  3472               	retlw	114
   369     08B1  3469               	retlw	105
   370     08B2  346F               	retlw	111
   371     08B3  3475               	retlw	117
   372     08B4  3473               	retlw	115
   373     08B5  3420               	retlw	32
   374     08B6  346F               	retlw	111
   375     08B7  3474               	retlw	116
   376     08B8  3468               	retlw	104
   377     08B9  3465               	retlw	101
   378     08BA  3472               	retlw	114
   379     08BB  3420               	retlw	32
   380     08BC  3473               	retlw	115
   381     08BD  3465               	retlw	101
   382     08BE  3472               	retlw	114
   383     08BF  3469               	retlw	105
   384     08C0  3461               	retlw	97
   385     08C1  346C               	retlw	108
   386     08C2  3420               	retlw	32
   387     08C3  3463               	retlw	99
   388     08C4  346F               	retlw	111
   389     08C5  346D               	retlw	109
   390     08C6  346D               	retlw	109
   391     08C7  3475               	retlw	117
   392     08C8  346E               	retlw	110
   393     08C9  3469               	retlw	105
   394     08CA  3463               	retlw	99
   395     08CB  3461               	retlw	97
   396     08CC  3474               	retlw	116
   397     08CD  3469               	retlw	105
   398     08CE  346F               	retlw	111
   399     08CF  346E               	retlw	110
   400     08D0  3420               	retlw	32
   401     08D1  3470               	retlw	112
   402     08D2  3472               	retlw	114
   403     08D3  346F               	retlw	111
   404     08D4  3474               	retlw	116
   405     08D5  346F               	retlw	111
   406     08D6  3463               	retlw	99
   407     08D7  346F               	retlw	111
   408     08D8  346C               	retlw	108
   409     08D9  3473               	retlw	115
   410     08DA  342C               	retlw	44
   411     08DB  3420               	retlw	32
   412     08DC  3472               	retlw	114
   413     08DD  3465               	retlw	101
   414     08DE  3471               	retlw	113
   415     08DF  3475               	retlw	117
   416     08E0  3469               	retlw	105
   417     08E1  3472               	retlw	114
   418     08E2  3469               	retlw	105
   419     08E3  346E               	retlw	110
   420     08E4  3467               	retlw	103
   421     08E5  3420               	retlw	32
   422     08E6  346F               	retlw	111
   423     08E7  346E               	retlw	110
   424     08E8  346C               	retlw	108
   425     08E9  3479               	retlw	121
   426     08EA  3420               	retlw	32
   427     08EB  3474               	retlw	116
   428     08EC  3468               	retlw	104
   429     08ED  3472               	retlw	114
   430     08EE  3465               	retlw	101
   431     08EF  3465               	retlw	101
   432     08F0  3420               	retlw	32
   433     08F1  3463               	retlw	99
   434     08F2  346F               	retlw	111
   435     08F3  346E               	retlw	110
   436     08F4  3474               	retlw	116
   437     08F5  3472               	retlw	114
   438     08F6  346F               	retlw	111
   439     08F7  346C               	retlw	108
   440     08F8  3420               	retlw	32
   441     08F9  346C               	retlw	108
   442     08FA  3469               	retlw	105
   443     08FB  346E               	retlw	110
   444     08FC  3465               	retlw	101
   445     08FD  3473               	retlw	115
   446     08FE  3420               	retlw	32
   447     08FF  3466               	retlw	102
   448     0900  3472               	retlw	114
   449     0901  346F               	retlw	111
   450     0902  346D               	retlw	109
   451     0903  3420               	retlw	32
   452     0904  3479               	retlw	121
   453     0905  346F               	retlw	111
   454     0906  3475               	retlw	117
   455     0907  3472               	retlw	114
   456     0908  3420               	retlw	32
   457     0909  346D               	retlw	109
   458     090A  3469               	retlw	105
   459     090B  3463               	retlw	99
   460     090C  3472               	retlw	114
   461     090D  346F               	retlw	111
   462     090E  3463               	retlw	99
   463     090F  346F               	retlw	111
   464     0910  346E               	retlw	110
   465     0911  3474               	retlw	116
   466     0912  3472               	retlw	114
   467     0913  346F               	retlw	111
   468     0914  346C               	retlw	108
   469     0915  346C               	retlw	108
   470     0916  3465               	retlw	101
   471     0917  3472               	retlw	114
   472     0918  3420               	retlw	32
   473     0919  3474               	retlw	116
   474     091A  346F               	retlw	111
   475     091B  3420               	retlw	32
   476     091C  3465               	retlw	101
   477     091D  3466               	retlw	102
   478     091E  3466               	retlw	102
   479     091F  3465               	retlw	101
   480     0920  3463               	retlw	99
   481     0921  3474               	retlw	116
   482     0922  3469               	retlw	105
   483     0923  3476               	retlw	118
   484     0924  3465               	retlw	101
   485     0925  346C               	retlw	108
   486     0926  3479               	retlw	121
   487     0927  3420               	retlw	32
   488     0928  3464               	retlw	100
   489     0929  3472               	retlw	114
   490     092A  3469               	retlw	105
   491     092B  3476               	retlw	118
   492     092C  3465               	retlw	101
   493     092D  3420               	retlw	32
   494     092E  3474               	retlw	116
   495     092F  3468               	retlw	104
   496     0930  3465               	retlw	101
   497     0931  3420               	retlw	32
   498     0932  3464               	retlw	100
   499     0933  3469               	retlw	105
   500     0934  3473               	retlw	115
   501     0935  3470               	retlw	112
   502     0936  346C               	retlw	108
   503     0937  3461               	retlw	97
   504     0938  3479               	retlw	121
   505     0939  342E               	retlw	46
   506     093A  340A               	retlw	10
   507     093B  3400               	retlw	0
   508     093C                     __end_ofmain@text:
   509     0006                     _PORTB          set	6
   510     001A                     _RCREG          set	26
   511     0019                     _TXREG          set	25
   512     0007                     _PORTC          set	7
   513     0032                     _RB2            set	50
   514     0030                     _RB0            set	48
   515     0031                     _RB1            set	49
   516     0065                     _RCIF           set	101
   517     0064                     _TXIF           set	100
   518     00C4                     _CREN           set	196
   519     00C7                     _SPEN           set	199
   520     0086                     _TRISB          set	134
   521     0099                     _SPBRG          set	153
   522     0087                     _TRISC          set	135
   523     04C5                     _TXEN           set	1221
   524     04C4                     _SYNC           set	1220
   525     04C6                     _TX9            set	1222
   526                           
   527                           	psect	cinit
   528     07FC                     start_initialization:	
   529                           ; #config settings
   530                           
   531     07FC                     __initialization:
   532     07FC                     end_of_initialization:	
   533                           ;End of C runtime variable initialization code
   534                           
   535     07FC                     __end_of__initialization:
   536     07FC  0183               	clrf	3
   537     07FD  120A  118A  2F39   	ljmp	_main	;jump to C main() function
   538                           
   539                           	psect	cstackCOMMON
   540     0070                     __pcstackCOMMON:
   541     0070                     ?_UART_TxChar:
   542     0070                     ?_UART_RxChar:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_send16Bit:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_main:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?___aldiv:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     UART_TxChar@ch:	
   555                           ; 4 bytes @ 0x0
   556                           
   557     0070                     send16Bit@dataByte:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ___aldiv@divisor:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ??_UART_TxChar:	
   564                           ; 4 bytes @ 0x0
   565                           
   566     0070                     ??_UART_RxChar:	
   567                           ; 1 bytes @ 0x0
   568                           
   569                           
   570                           ; 1 bytes @ 0x0
   571     0070                     	ds	1
   572     0071                     ??_send16Bit:
   573                           
   574                           ; 1 bytes @ 0x1
   575     0071                     	ds	3
   576     0074                     ___aldiv@dividend:
   577                           
   578                           ; 4 bytes @ 0x4
   579     0074                     	ds	1
   580     0075                     send16Bit@address:
   581                           
   582                           ; 1 bytes @ 0x5
   583     0075                     	ds	1
   584     0076                     send16Bit@word:
   585                           
   586                           ; 2 bytes @ 0x6
   587     0076                     	ds	2
   588     0078                     send16Bit@i:
   589     0078                     ??___aldiv:	
   590                           ; 2 bytes @ 0x8
   591                           
   592                           
   593                           ; 1 bytes @ 0x8
   594     0078                     	ds	2
   595     007A                     ?_display4Chars:
   596     007A                     display4Chars@c2:	
   597                           ; 1 bytes @ 0xA
   598                           
   599                           
   600                           ; 1 bytes @ 0xA
   601     007A                     	ds	1
   602     007B                     display4Chars@c3:
   603                           
   604                           ; 1 bytes @ 0xB
   605     007B                     	ds	1
   606     007C                     display4Chars@c4:
   607                           
   608                           ; 1 bytes @ 0xC
   609     007C                     	ds	1
   610     007D                     display4Chars@c1:
   611     007D                     ??_display4Chars:	
   612                           ; 1 bytes @ 0xD
   613                           
   614                           
   615                           ; 1 bytes @ 0xD
   616     007D                     	ds	1
   617     007E                     ??_displayCount:
   618     007E                     ??_main:	
   619                           ; 1 bytes @ 0xE
   620                           
   621                           
   622                           	psect	cstackBANK0
   623     0020                     __pcstackBANK0:	
   624                           ; 1 bytes @ 0xE
   625                           
   626     0020                     ?_displayCount:
   627     0020                     displayCount@count:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0020                     ___aldiv@counter:	
   631                           ; 1 bytes @ 0x0
   632                           
   633                           
   634                           ; 1 bytes @ 0x0
   635     0020                     	ds	1
   636     0021                     displayCount@suffix:
   637     0021                     ___aldiv@sign:	
   638                           ; 1 bytes @ 0x1
   639                           
   640                           
   641                           ; 1 bytes @ 0x1
   642     0021                     	ds	1
   643     0022                     displayCount@letter:
   644     0022                     ___aldiv@quotient:	
   645                           ; 1 bytes @ 0x2
   646                           
   647                           
   648                           ; 4 bytes @ 0x2
   649     0022                     	ds	4
   650     0026                     ?_UART_Init:
   651     0026                     UART_Init@baudRate:	
   652                           ; 1 bytes @ 0x6
   653                           
   654                           
   655                           ; 4 bytes @ 0x6
   656     0026                     	ds	4
   657     002A                     ??_UART_Init:
   658                           
   659                           ; 1 bytes @ 0xA
   660     002A                     	ds	8
   661     0032                     main@input:
   662                           
   663                           ; 2 bytes @ 0x12
   664     0032                     	ds	2
   665     0034                     main@c:
   666                           
   667                           ; 1 bytes @ 0x14
   668     0034                     	ds	1
   669     0035                     main@i:
   670                           
   671                           ; 2 bytes @ 0x15
   672     0035                     	ds	2
   673                           
   674                           	psect	maintext
   675     0739                     __pmaintext:	
   676 ;;
   677 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   678 ;;
   679 ;; *************** function _main *****************
   680 ;; Defined at:
   681 ;;		line 113 in file "main.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  i               2   21[BANK0 ] int 
   686 ;;  input           2   18[BANK0 ] unsigned char [2]
   687 ;;  c               1   20[BANK0 ] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : B00/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       5       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         0       5       0       0       0
   701 ;;Total ram usage:        5 bytes
   702 ;; Hardware stack levels required when called: 3
   703 ;; This function calls:
   704 ;;		_UART_Init
   705 ;;		_UART_RxChar
   706 ;;		_UART_TxChar
   707 ;;		_displayCount
   708 ;;		_send16Bit
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714     0739                     _main:	
   715                           ;psect for function _main
   716                           
   717     0739                     l862:	
   718                           ;incstack = 0
   719                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   720                           
   721                           
   722                           ;main.c: 117:     "communication protocols, requiring only three control lines from your
      +                           microcontroller to "
   723     0739  1683               	bsf	3,5	;RP0=1, select bank1
   724     073A  1303               	bcf	3,6	;RP1=0, select bank1
   725     073B  0186               	clrf	6	;volatile
   726                           
   727                           ;main.c: 118:     "effectively drive the display.\n";
   728     073C  1283               	bcf	3,5	;RP0=0, select bank0
   729     073D  1303               	bcf	3,6	;RP1=0, select bank0
   730     073E  0186               	clrf	6	;volatile
   731     073F                     l864:
   732                           
   733                           ;main.c: 119: 
   734     073F  3081               	movlw	129
   735     0740  00F0               	movwf	send16Bit@dataByte
   736     0741  3004               	movlw	4
   737     0742  120A  118A  260B  120A  118A  	fcall	_send16Bit
   738     0747                     l866:
   739                           
   740                           ;main.c: 120:     int i = 0;
   741     0747  30FF               	movlw	255
   742     0748  00F0               	movwf	send16Bit@dataByte
   743     0749  3001               	movlw	1
   744     074A  120A  118A  260B  120A  118A  	fcall	_send16Bit
   745     074F                     l868:
   746                           
   747                           ;main.c: 121:     while (text[i] != '\0')
   748     074F  30FF               	movlw	255
   749     0750  00F0               	movwf	send16Bit@dataByte
   750     0751  3002               	movlw	2
   751     0752  120A  118A  260B  120A  118A  	fcall	_send16Bit
   752     0757                     l870:
   753                           
   754                           ;main.c: 122:     {
   755     0757  01F0               	clrf	send16Bit@dataByte
   756     0758  3007               	movlw	7
   757     0759  120A  118A  260B  120A  118A  	fcall	_send16Bit
   758     075E                     l872:
   759                           
   760                           ;main.c: 124:         UART_RxChar();
   761     075E  3000               	movlw	0
   762     075F  1283               	bcf	3,5	;RP0=0, select bank0
   763     0760  1303               	bcf	3,6	;RP1=0, select bank0
   764     0761  00A9               	movwf	UART_Init@baudRate+3
   765     0762  3000               	movlw	0
   766     0763  00A8               	movwf	UART_Init@baudRate+2
   767     0764  3025               	movlw	37
   768     0765  00A7               	movwf	UART_Init@baudRate+1
   769     0766  3080               	movlw	128
   770     0767  00A6               	movwf	UART_Init@baudRate
   771     0768  120A  118A  25B6  120A  118A  	fcall	_UART_Init
   772     076D                     l874:
   773                           
   774                           ;main.c: 126: ;main.c: 132:     while(1)
   775     076D  1283               	bcf	3,5	;RP0=0, select bank0
   776     076E  1303               	bcf	3,6	;RP1=0, select bank0
   777     076F  01B5               	clrf	main@i
   778     0770  01B6               	clrf	main@i+1
   779                           
   780                           ;main.c: 133:     {
   781     0771  2F91               	goto	l882
   782     0772                     l876:
   783                           
   784                           ;main.c: 134:         c = UART_RxChar();;main.c: 135:         if(c=='#'){
   785     0772  3088               	movlw	high (main@text| (0+32768))
   786     0773  0736               	addwf	main@i+1,w
   787     0774  00FF               	movwf	btemp+1
   788     0775  3012               	movlw	low (main@text| (0+32768))
   789     0776  0735               	addwf	main@i,w
   790     0777  0084               	movwf	4
   791     0778  1803               	skipnc
   792     0779  0AFF               	incf	btemp+1,f
   793     077A  120A  158A  2000  120A  118A  	fcall	stringtab
   794     077F  120A  118A  256C  120A  118A  	fcall	_UART_TxChar
   795     0784                     l878:
   796                           
   797                           ;main.c: 136:             for(i=0; i<3;i++){
   798     0784  120A  118A  2563  120A  118A  	fcall	_UART_RxChar
   799     0789                     l880:
   800                           
   801                           ;main.c: 137:                 c = UART_RxChar();
   802     0789  3001               	movlw	1
   803     078A  1283               	bcf	3,5	;RP0=0, select bank0
   804     078B  1303               	bcf	3,6	;RP1=0, select bank0
   805     078C  07B5               	addwf	main@i,f
   806     078D  1803               	skipnc
   807     078E  0AB6               	incf	main@i+1,f
   808     078F  3000               	movlw	0
   809     0790  07B6               	addwf	main@i+1,f
   810     0791                     l882:
   811                           
   812                           ;main.c: 133:     {
   813     0791  3088               	movlw	high (main@text| (0+32768))
   814     0792  0736               	addwf	main@i+1,w
   815     0793  00FF               	movwf	btemp+1
   816     0794  3012               	movlw	low (main@text| (0+32768))
   817     0795  0735               	addwf	main@i,w
   818     0796  0084               	movwf	4
   819     0797  1803               	skipnc
   820     0798  0AFF               	incf	btemp+1,f
   821     0799  120A  158A  2000  120A  118A  	fcall	stringtab
   822     079E  3A00               	xorlw	0
   823     079F  1D03               	skipz
   824     07A0  2FA2               	goto	u381
   825     07A1  2FA3               	goto	u380
   826     07A2                     u381:
   827     07A2  2F72               	goto	l876
   828     07A3                     u380:
   829     07A3                     l884:
   830                           
   831                           ;main.c: 145:             displayCount(0x45, input[1], 0x2C);;main.c: 146: 
   832     07A3  120A  118A  2563  120A  118A  	fcall	_UART_RxChar
   833     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   834     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   835     07AA  00B4               	movwf	main@c
   836     07AB                     l886:
   837                           
   838                           ;main.c: 147: 
   839     07AB  3023               	movlw	35
   840     07AC  0634               	xorwf	main@c,w
   841     07AD  1D03               	btfss	3,2
   842     07AE  2FB0               	goto	u391
   843     07AF  2FB1               	goto	u390
   844     07B0                     u391:
   845     07B0  2FA3               	goto	l884
   846     07B1                     u390:
   847     07B1                     l888:
   848                           
   849                           ;main.c: 148:             displayCount(0x46, input[2], 0x2E);
   850     07B1  01B5               	clrf	main@i
   851     07B2  01B6               	clrf	main@i+1
   852     07B3                     l894:
   853                           
   854                           ;main.c: 149: 
   855     07B3  120A  118A  2563  120A  118A  	fcall	_UART_RxChar
   856     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   857     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   858     07BA  00B4               	movwf	main@c
   859     07BB                     l896:
   860                           
   861                           ;main.c: 150:         }
   862     07BB  0835               	movf	main@i,w
   863     07BC  3E32               	addlw	(low (main@input| 0))& (0+255)
   864     07BD  0084               	movwf	4
   865     07BE  0834               	movf	main@c,w
   866     07BF  1383               	bcf	3,7	;select IRP bank0
   867     07C0  0080               	movwf	0
   868     07C1                     l898:
   869                           
   870                           ;main.c: 151:     }
   871     07C1  3001               	movlw	1
   872     07C2  07B5               	addwf	main@i,f
   873     07C3  1803               	skipnc
   874     07C4  0AB6               	incf	main@i+1,f
   875     07C5  3000               	movlw	0
   876     07C6  07B6               	addwf	main@i+1,f
   877     07C7                     l900:
   878     07C7  0836               	movf	main@i+1,w
   879     07C8  3A80               	xorlw	128
   880     07C9  00FF               	movwf	btemp+1
   881     07CA  3080               	movlw	128
   882     07CB  027F               	subwf	btemp+1,w
   883     07CC  1D03               	skipz
   884     07CD  2FD0               	goto	u405
   885     07CE  3003               	movlw	3
   886     07CF  0235               	subwf	main@i,w
   887     07D0                     u405:
   888     07D0  1C03               	skipc
   889     07D1  2FD3               	goto	u401
   890     07D2  2FD4               	goto	u400
   891     07D3                     u401:
   892     07D3  2FB3               	goto	l894
   893     07D4                     u400:
   894     07D4                     l902:
   895     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   896     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   897     07D6  0832               	movf	main@input,w
   898     07D7  00A0               	movwf	displayCount@count
   899     07D8  302C               	movlw	44
   900     07D9  00A1               	movwf	displayCount@suffix
   901     07DA  3044               	movlw	68
   902     07DB  120A  118A  2577  120A  118A  	fcall	_displayCount
   903     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   904     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   905     07E2  0833               	movf	main@input+1,w
   906     07E3  00A0               	movwf	displayCount@count
   907     07E4  302C               	movlw	44
   908     07E5  00A1               	movwf	displayCount@suffix
   909     07E6  3045               	movlw	69
   910     07E7  120A  118A  2577  120A  118A  	fcall	_displayCount
   911     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   912     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   913     07EE  0834               	movf	main@input+2,w
   914     07EF  00A0               	movwf	displayCount@count
   915     07F0  302E               	movlw	46
   916     07F1  00A1               	movwf	displayCount@suffix
   917     07F2  3046               	movlw	70
   918     07F3  120A  118A  2577  120A  118A  	fcall	_displayCount
   919     07F8  2FA3               	goto	l884
   920     07F9  120A  118A  2800   	ljmp	start
   921     07FC                     __end_of_main:
   922                           
   923                           	psect	text1
   924     0577                     __ptext1:	
   925 ;; *************** function _displayCount *****************
   926 ;; Defined at:
   927 ;;		line 103 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  letter          1    wreg     unsigned char 
   930 ;;  count           1    0[BANK0 ] unsigned char 
   931 ;;  suffix          1    1[BANK0 ] unsigned char 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  letter          1    2[BANK0 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       2       0       0       0
   944 ;;      Locals:         0       1       0       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         0       3       0       0       0
   947 ;;Total ram usage:        3 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 2
   950 ;; This function calls:
   951 ;;		_display4Chars
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957     0577                     _displayCount:	
   958                           ;psect for function _displayCount
   959                           
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _displayCount: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   963                           ;displayCount@letter stored from wreg
   964     0577  1283               	bcf	3,5	;RP0=0, select bank0
   965     0578  1303               	bcf	3,6	;RP1=0, select bank0
   966     0579  00A2               	movwf	displayCount@letter
   967     057A                     l860:
   968                           
   969                           ;main.c: 103: ;main.c: 104: ;main.c: 107:     send16Bit(0x04, 0x81);
   970     057A  303D               	movlw	61
   971     057B  00FA               	movwf	display4Chars@c2
   972     057C  0820               	movf	displayCount@count,w
   973     057D  3E30               	addlw	48
   974     057E  00FB               	movwf	display4Chars@c3
   975     057F  0821               	movf	displayCount@suffix,w
   976     0580  00FC               	movwf	display4Chars@c4
   977     0581  0822               	movf	displayCount@letter,w
   978     0582  120A  118A  2594  120A  118A  	fcall	_display4Chars
   979                           
   980                           ;main.c: 110:     send16Bit(0x07, 0x00);
   981     0587  3020               	movlw	32
   982     0588  00FA               	movwf	display4Chars@c2
   983     0589  3020               	movlw	32
   984     058A  00FB               	movwf	display4Chars@c3
   985     058B  3020               	movlw	32
   986     058C  00FC               	movwf	display4Chars@c4
   987     058D  3020               	movlw	32
   988     058E  120A  118A  2594  120A  118A  	fcall	_display4Chars
   989     0593                     l64:
   990     0593  0008               	return
   991     0594                     __end_of_displayCount:
   992                           
   993                           	psect	text2
   994     0594                     __ptext2:	
   995 ;; *************** function _display4Chars *****************
   996 ;; Defined at:
   997 ;;		line 95 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  c1              1    wreg     unsigned char 
  1000 ;;  c2              1   10[COMMON] unsigned char 
  1001 ;;  c3              1   11[COMMON] unsigned char 
  1002 ;;  c4              1   12[COMMON] unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  c1              1   13[COMMON] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         3       0       0       0       0
  1015 ;;      Locals:         1       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0
  1017 ;;      Totals:         4       0       0       0       0
  1018 ;;Total ram usage:        4 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 1
  1021 ;; This function calls:
  1022 ;;		_send16Bit
  1023 ;; This function is called by:
  1024 ;;		_displayCount
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028     0594                     _display4Chars:	
  1029                           ;psect for function _display4Chars
  1030                           
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in _display4Chars: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1034                           ;display4Chars@c1 stored from wreg
  1035     0594  00FD               	movwf	display4Chars@c1
  1036     0595                     l792:
  1037                           
  1038                           ;main.c: 95:     display4Chars(letter, 0x3D, (0x30 + count), suffix);;main.c: 96: ;main.
      +                          c: 97: 
  1039     0595  087D               	movf	display4Chars@c1,w
  1040     0596  00F0               	movwf	send16Bit@dataByte
  1041     0597  3020               	movlw	32
  1042     0598  120A  118A  260B  120A  118A  	fcall	_send16Bit
  1043                           
  1044                           ;main.c: 98:     display4Chars(0x20, 0x20, 0x20, 0x20);
  1045     059D  087A               	movf	display4Chars@c2,w
  1046     059E  00F0               	movwf	send16Bit@dataByte
  1047     059F  3021               	movlw	33
  1048     05A0  120A  118A  260B  120A  118A  	fcall	_send16Bit
  1049                           
  1050                           ;main.c: 99: }
  1051     05A5  087B               	movf	display4Chars@c3,w
  1052     05A6  00F0               	movwf	send16Bit@dataByte
  1053     05A7  3022               	movlw	34
  1054     05A8  120A  118A  260B  120A  118A  	fcall	_send16Bit
  1055                           
  1056                           ;main.c: 100: 
  1057     05AD  087C               	movf	display4Chars@c4,w
  1058     05AE  00F0               	movwf	send16Bit@dataByte
  1059     05AF  3023               	movlw	35
  1060     05B0  120A  118A  260B  120A  118A  	fcall	_send16Bit
  1061     05B5                     l61:
  1062     05B5  0008               	return
  1063     05B6                     __end_of_display4Chars:
  1064                           
  1065                           	psect	text3
  1066     060B                     __ptext3:	
  1067 ;; *************** function _send16Bit *****************
  1068 ;; Defined at:
  1069 ;;		line 56 in file "main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  address         1    wreg     unsigned char 
  1072 ;;  dataByte        1    0[COMMON] unsigned char 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  address         1    5[COMMON] unsigned char 
  1075 ;;  i               2    8[COMMON] int 
  1076 ;;  word            2    6[COMMON] int 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, btemp+1
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         1       0       0       0       0
  1087 ;;      Locals:         5       0       0       0       0
  1088 ;;      Temps:          4       0       0       0       0
  1089 ;;      Totals:        10       0       0       0       0
  1090 ;;Total ram usage:       10 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_display4Chars
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100     060B                     _send16Bit:	
  1101                           ;psect for function _send16Bit
  1102                           
  1103                           
  1104                           ;incstack = 0
  1105                           ; Regs used in _send16Bit: [wreg+status,2+btemp+1]
  1106                           ;send16Bit@address stored from wreg
  1107     060B  00F5               	movwf	send16Bit@address
  1108     060C                     l764:
  1109                           
  1110                           ;main.c: 56:     {;main.c: 57:         if(word & 0x8000);main.c: 58:         {
  1111     060C  0870               	movf	send16Bit@dataByte,w
  1112     060D  00F1               	movwf	??_send16Bit
  1113     060E  01F2               	clrf	??_send16Bit+1
  1114     060F  0875               	movf	send16Bit@address,w
  1115     0610  00F3               	movwf	??_send16Bit+2
  1116     0611  01F4               	clrf	??_send16Bit+3
  1117     0612  0873               	movf	??_send16Bit+2,w
  1118     0613  00F4               	movwf	??_send16Bit+3
  1119     0614  01F3               	clrf	??_send16Bit+2
  1120     0615  0871               	movf	??_send16Bit,w
  1121     0616  0473               	iorwf	??_send16Bit+2,w
  1122     0617  00F6               	movwf	send16Bit@word
  1123     0618  0872               	movf	??_send16Bit+1,w
  1124     0619  0474               	iorwf	??_send16Bit+3,w
  1125     061A  00F7               	movwf	send16Bit@word+1
  1126     061B                     l766:
  1127                           
  1128                           ;main.c: 59:             RB0 = 1;;main.c: 62:         {
  1129     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1130     061C  1303               	bcf	3,6	;RP1=0, select bank0
  1131     061D  1486               	bsf	6,1	;volatile
  1132     061E                     l768:
  1133                           
  1134                           ;main.c: 63:             RB0 = 0;
  1135     061E  3002               	movlw	2
  1136     061F  00F3               	movwf	??_send16Bit+2
  1137     0620  3045               	movlw	69
  1138     0621  00F2               	movwf	??_send16Bit+1
  1139     0622  30A9               	movlw	169
  1140     0623  00F1               	movwf	??_send16Bit
  1141     0624                     u417:
  1142     0624  0BF1               	decfsz	??_send16Bit,f
  1143     0625  2E24               	goto	u417
  1144     0626  0BF2               	decfsz	??_send16Bit+1,f
  1145     0627  2E24               	goto	u417
  1146     0628  0BF3               	decfsz	??_send16Bit+2,f
  1147     0629  2E24               	goto	u417
  1148     062A  2E2B               	nop2
  1149     062B                     l770:
  1150                           
  1151                           ;main.c: 64:         }
  1152     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1153     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1154     062D  1086               	bcf	6,1	;volatile
  1155     062E                     l772:
  1156                           
  1157                           ;main.c: 65: 
  1158     062E  3002               	movlw	2
  1159     062F  00F3               	movwf	??_send16Bit+2
  1160     0630  3045               	movlw	69
  1161     0631  00F2               	movwf	??_send16Bit+1
  1162     0632  30A9               	movlw	169
  1163     0633  00F1               	movwf	??_send16Bit
  1164     0634                     u427:
  1165     0634  0BF1               	decfsz	??_send16Bit,f
  1166     0635  2E34               	goto	u427
  1167     0636  0BF2               	decfsz	??_send16Bit+1,f
  1168     0637  2E34               	goto	u427
  1169     0638  0BF3               	decfsz	??_send16Bit+2,f
  1170     0639  2E34               	goto	u427
  1171     063A  2E3B               	nop2
  1172     063B                     l774:
  1173                           
  1174                           ;main.c: 67: 
  1175     063B  01F8               	clrf	send16Bit@i
  1176     063C  01F9               	clrf	send16Bit@i+1
  1177     063D                     l54:
  1178                           
  1179                           ;main.c: 68: ;main.c: 69:         RB2 = 1;
  1180     063D  1FF7               	btfss	send16Bit@word+1,7
  1181     063E  2E40               	goto	u211
  1182     063F  2E41               	goto	u210
  1183     0640                     u211:
  1184     0640  2E45               	goto	l56
  1185     0641                     u210:
  1186     0641                     l780:
  1187                           
  1188                           ;main.c: 70:         _delay((unsigned long)((50)*(20000000/4000.0)));;main.c: 71: 
  1189     0641  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0642  1303               	bcf	3,6	;RP1=0, select bank0
  1191     0643  1406               	bsf	6,0	;volatile
  1192                           
  1193                           ;main.c: 72: 
  1194     0644  2E48               	goto	l782
  1195     0645                     l56:	
  1196                           ;main.c: 73:         RB2 = 0;
  1197                           
  1198                           
  1199                           ;main.c: 74:         _delay((unsigned long)((50)*(20000000/4000.0)));;main.c: 75: 
  1200     0645  1283               	bcf	3,5	;RP0=0, select bank0
  1201     0646  1303               	bcf	3,6	;RP1=0, select bank0
  1202     0647  1006               	bcf	6,0	;volatile
  1203     0648                     l782:
  1204                           
  1205                           ;main.c: 78: 
  1206     0648  3002               	movlw	2
  1207     0649  00F3               	movwf	??_send16Bit+2
  1208     064A  3045               	movlw	69
  1209     064B  00F2               	movwf	??_send16Bit+1
  1210     064C  30A9               	movlw	169
  1211     064D  00F1               	movwf	??_send16Bit
  1212     064E                     u437:
  1213     064E  0BF1               	decfsz	??_send16Bit,f
  1214     064F  2E4E               	goto	u437
  1215     0650  0BF2               	decfsz	??_send16Bit+1,f
  1216     0651  2E4E               	goto	u437
  1217     0652  0BF3               	decfsz	??_send16Bit+2,f
  1218     0653  2E4E               	goto	u437
  1219     0654  2E55               	nop2
  1220     0655                     l784:
  1221                           
  1222                           ;main.c: 81: }
  1223     0655  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0656  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0657  1506               	bsf	6,2	;volatile
  1226                           
  1227                           ;main.c: 82: 
  1228     0658  3002               	movlw	2
  1229     0659  00F3               	movwf	??_send16Bit+2
  1230     065A  3045               	movlw	69
  1231     065B  00F2               	movwf	??_send16Bit+1
  1232     065C  30A9               	movlw	169
  1233     065D  00F1               	movwf	??_send16Bit
  1234     065E                     u447:
  1235     065E  0BF1               	decfsz	??_send16Bit,f
  1236     065F  2E5E               	goto	u447
  1237     0660  0BF2               	decfsz	??_send16Bit+1,f
  1238     0661  2E5E               	goto	u447
  1239     0662  0BF3               	decfsz	??_send16Bit+2,f
  1240     0663  2E5E               	goto	u447
  1241     0664  2E65               	nop2
  1242     0665                     l786:
  1243                           
  1244                           ;main.c: 85:     send16Bit(0x20, c1);
  1245     0665  1283               	bcf	3,5	;RP0=0, select bank0
  1246     0666  1303               	bcf	3,6	;RP1=0, select bank0
  1247     0667  1106               	bcf	6,2	;volatile
  1248                           
  1249                           ;main.c: 86:     send16Bit(0x21, c2);
  1250     0668  3002               	movlw	2
  1251     0669  00F3               	movwf	??_send16Bit+2
  1252     066A  3045               	movlw	69
  1253     066B  00F2               	movwf	??_send16Bit+1
  1254     066C  30A9               	movlw	169
  1255     066D  00F1               	movwf	??_send16Bit
  1256     066E                     u457:
  1257     066E  0BF1               	decfsz	??_send16Bit,f
  1258     066F  2E6E               	goto	u457
  1259     0670  0BF2               	decfsz	??_send16Bit+1,f
  1260     0671  2E6E               	goto	u457
  1261     0672  0BF3               	decfsz	??_send16Bit+2,f
  1262     0673  2E6E               	goto	u457
  1263     0674  2E75               	nop2
  1264                           
  1265                           ;main.c: 88:     send16Bit(0x23, c4);
  1266     0675  3001               	movlw	1
  1267     0676                     u225:
  1268     0676  1003               	clrc
  1269     0677  0DF6               	rlf	send16Bit@word,f
  1270     0678  0DF7               	rlf	send16Bit@word+1,f
  1271     0679  3EFF               	addlw	-1
  1272     067A  1D03               	skipz
  1273     067B  2E76               	goto	u225
  1274                           
  1275                           ;main.c: 89: }
  1276     067C  3001               	movlw	1
  1277     067D  07F8               	addwf	send16Bit@i,f
  1278     067E  1803               	skipnc
  1279     067F  0AF9               	incf	send16Bit@i+1,f
  1280     0680  3000               	movlw	0
  1281     0681  07F9               	addwf	send16Bit@i+1,f
  1282     0682                     l788:
  1283     0682  0879               	movf	send16Bit@i+1,w
  1284     0683  3A80               	xorlw	128
  1285     0684  00FF               	movwf	btemp+1
  1286     0685  3080               	movlw	128
  1287     0686  027F               	subwf	btemp+1,w
  1288     0687  1D03               	skipz
  1289     0688  2E8B               	goto	u235
  1290     0689  3010               	movlw	16
  1291     068A  0278               	subwf	send16Bit@i,w
  1292     068B                     u235:
  1293     068B  1C03               	skipc
  1294     068C  2E8E               	goto	u231
  1295     068D  2E8F               	goto	u230
  1296     068E                     u231:
  1297     068E  2E3D               	goto	l54
  1298     068F                     u230:
  1299     068F                     l55:
  1300                           
  1301                           ;main.c: 91: void displayCount(char letter, char count, char suffix)
  1302     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1303     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1304     0691  1486               	bsf	6,1	;volatile
  1305     0692                     l790:
  1306                           
  1307                           ;main.c: 92: {
  1308     0692  3002               	movlw	2
  1309     0693  00F3               	movwf	??_send16Bit+2
  1310     0694  3045               	movlw	69
  1311     0695  00F2               	movwf	??_send16Bit+1
  1312     0696  30A9               	movlw	169
  1313     0697  00F1               	movwf	??_send16Bit
  1314     0698                     u467:
  1315     0698  0BF1               	decfsz	??_send16Bit,f
  1316     0699  2E98               	goto	u467
  1317     069A  0BF2               	decfsz	??_send16Bit+1,f
  1318     069B  2E98               	goto	u467
  1319     069C  0BF3               	decfsz	??_send16Bit+2,f
  1320     069D  2E98               	goto	u467
  1321     069E  2E9F               	nop2
  1322     069F                     l58:
  1323     069F  0008               	return
  1324     06A0                     __end_of_send16Bit:
  1325                           
  1326                           	psect	text4
  1327     056C                     __ptext4:	
  1328 ;; *************** function _UART_TxChar *****************
  1329 ;; Defined at:
  1330 ;;		line 40 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  ch              1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  ch              1    0[COMMON] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1344 ;;      Params:         0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0
  1347 ;;      Totals:         1       0       0       0       0
  1348 ;;Total ram usage:        1 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357     056C                     _UART_TxChar:	
  1358                           ;psect for function _UART_TxChar
  1359                           
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _UART_TxChar: [wreg]
  1363                           ;UART_TxChar@ch stored from wreg
  1364     056C  00F0               	movwf	UART_TxChar@ch
  1365     056D                     l850:
  1366     056D                     l42:	
  1367                           ;main.c: 40: };main.c: 41: ;main.c: 42: 
  1368                           
  1369     056D  1283               	bcf	3,5	;RP0=0, select bank0
  1370     056E  1303               	bcf	3,6	;RP1=0, select bank0
  1371     056F  1E0C               	btfss	12,4	;volatile
  1372     0570  2D72               	goto	u361
  1373     0571  2D73               	goto	u360
  1374     0572                     u361:
  1375     0572  2D6D               	goto	l42
  1376     0573                     u360:
  1377     0573                     l44:
  1378                           
  1379                           ;main.c: 43: 
  1380     0573  120C               	bcf	12,4	;volatile
  1381     0574                     l852:
  1382                           
  1383                           ;main.c: 44: void send16Bit(char address, char dataByte)
  1384     0574  0870               	movf	UART_TxChar@ch,w
  1385     0575  0099               	movwf	25	;volatile
  1386     0576                     l45:
  1387     0576  0008               	return
  1388     0577                     __end_of_UART_TxChar:
  1389                           
  1390                           	psect	text5
  1391     0563                     __ptext5:	
  1392 ;; *************** function _UART_RxChar *****************
  1393 ;; Defined at:
  1394 ;;		line 47 in file "main.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      unsigned char 
  1401 ;; Registers used:
  1402 ;;		wreg
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421     0563                     _UART_RxChar:	
  1422                           ;psect for function _UART_RxChar
  1423                           
  1424     0563                     l854:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _UART_RxChar: [wreg]
  1427                           
  1428     0563                     l48:	
  1429                           ;main.c: 49: 
  1430                           
  1431     0563  1283               	bcf	3,5	;RP0=0, select bank0
  1432     0564  1303               	bcf	3,6	;RP1=0, select bank0
  1433     0565  1E8C               	btfss	12,5	;volatile
  1434     0566  2D68               	goto	u371
  1435     0567  2D69               	goto	u370
  1436     0568                     u371:
  1437     0568  2D63               	goto	l48
  1438     0569                     u370:
  1439     0569                     l50:
  1440                           
  1441                           ;main.c: 50:     RB1 = 1;
  1442     0569  128C               	bcf	12,5	;volatile
  1443     056A                     l856:
  1444                           
  1445                           ;main.c: 51:     _delay((unsigned long)((50)*(20000000/4000.0)));
  1446     056A  081A               	movf	26,w	;volatile
  1447     056B                     l51:
  1448     056B  0008               	return
  1449     056C                     __end_of_UART_RxChar:
  1450                           
  1451                           	psect	text6
  1452     05B6                     __ptext6:	
  1453 ;; *************** function _UART_Init *****************
  1454 ;; Defined at:
  1455 ;;		line 24 in file "main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  baudRate        4    6[BANK0 ] long 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       4       0       0       0
  1470 ;;      Locals:         0       0       0       0       0
  1471 ;;      Temps:          0       8       0       0       0
  1472 ;;      Totals:         0      12       0       0       0
  1473 ;;Total ram usage:       12 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 1
  1476 ;; This function calls:
  1477 ;;		___aldiv
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483     05B6                     _UART_Init:	
  1484                           ;psect for function _UART_Init
  1485                           
  1486     05B6                     l834:	
  1487                           ;incstack = 0
  1488                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1489                           
  1490                           
  1491                           ;main.c: 24: ;main.c: 25:     SPBRG = (int)((20000000 / (64 * (baudRate + 1))));;main.c:
      +                           27: 
  1492     05B6  3080               	movlw	128
  1493     05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1494     05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1495     05B9  0087               	movwf	7	;volatile
  1496     05BA                     l836:
  1497                           
  1498                           ;main.c: 28: void UART_TxChar(char ch)
  1499     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1500     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1501     05BC  0187               	clrf	7	;volatile
  1502     05BD                     l838:
  1503                           
  1504                           ;main.c: 30:     while(TXIF==0);
  1505     05BD  1683               	bsf	3,5	;RP0=1, select bank1
  1506     05BE  1303               	bcf	3,6	;RP1=0, select bank1
  1507     05BF  1318               	bcf	24,6	;volatile
  1508     05C0                     l840:
  1509                           
  1510                           ;main.c: 31:     TXIF = 0;
  1511     05C0  1218               	bcf	24,4	;volatile
  1512     05C1                     l842:
  1513                           
  1514                           ;main.c: 32:     TXREG = ch;
  1515     05C1  1698               	bsf	24,5	;volatile
  1516     05C2                     l844:
  1517                           
  1518                           ;main.c: 34: 
  1519     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1520     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1521     05C4  1798               	bsf	24,7	;volatile
  1522     05C5                     l846:
  1523                           
  1524                           ;main.c: 35: char UART_RxChar(void)
  1525     05C5  1618               	bsf	24,4	;volatile
  1526     05C6                     l848:
  1527                           
  1528                           ;main.c: 37:     while(RCIF==0);
  1529     05C6  3040               	movlw	64
  1530     05C7  00AA               	movwf	??_UART_Init
  1531     05C8  3000               	movlw	0
  1532     05C9  00AB               	movwf	??_UART_Init+1
  1533     05CA  3000               	movlw	0
  1534     05CB  00AC               	movwf	??_UART_Init+2
  1535     05CC  3000               	movlw	0
  1536     05CD  00AD               	movwf	??_UART_Init+3
  1537     05CE  0826               	movf	UART_Init@baudRate,w
  1538     05CF  00AE               	movwf	??_UART_Init+4
  1539     05D0  0827               	movf	UART_Init@baudRate+1,w
  1540     05D1  00AF               	movwf	??_UART_Init+5
  1541     05D2  0828               	movf	UART_Init@baudRate+2,w
  1542     05D3  00B0               	movwf	??_UART_Init+6
  1543     05D4  0829               	movf	UART_Init@baudRate+3,w
  1544     05D5  00B1               	movwf	??_UART_Init+7
  1545     05D6  3006               	movlw	6
  1546     05D7                     u345:
  1547     05D7  1003               	clrc
  1548     05D8  0DAE               	rlf	??_UART_Init+4,f
  1549     05D9  0DAF               	rlf	??_UART_Init+5,f
  1550     05DA  0DB0               	rlf	??_UART_Init+6,f
  1551     05DB  0DB1               	rlf	??_UART_Init+7,f
  1552     05DC                     u340:
  1553     05DC  3EFF               	addlw	-1
  1554     05DD  1D03               	skipz
  1555     05DE  2DD7               	goto	u345
  1556     05DF  082E               	movf	??_UART_Init+4,w
  1557     05E0  07AA               	addwf	??_UART_Init,f
  1558     05E1  082F               	movf	??_UART_Init+5,w
  1559     05E2  1803               	skipnc
  1560     05E3  0F2F               	incfsz	??_UART_Init+5,w
  1561     05E4  2DE6               	goto	u350
  1562     05E5  2DE7               	goto	u351
  1563     05E6                     u350:
  1564     05E6  07AB               	addwf	??_UART_Init+1,f
  1565     05E7                     u351:
  1566     05E7  0830               	movf	??_UART_Init+6,w
  1567     05E8  1803               	skipnc
  1568     05E9  0F30               	incfsz	??_UART_Init+6,w
  1569     05EA  2DEC               	goto	u352
  1570     05EB  2DED               	goto	u353
  1571     05EC                     u352:
  1572     05EC  07AC               	addwf	??_UART_Init+2,f
  1573     05ED                     u353:
  1574     05ED  0831               	movf	??_UART_Init+7,w
  1575     05EE  1803               	skipnc
  1576     05EF  0A31               	incf	??_UART_Init+7,w
  1577     05F0  07AD               	addwf	??_UART_Init+3,f
  1578     05F1  082D               	movf	??_UART_Init+3,w
  1579     05F2  00F3               	movwf	___aldiv@divisor+3
  1580     05F3  082C               	movf	??_UART_Init+2,w
  1581     05F4  00F2               	movwf	___aldiv@divisor+2
  1582     05F5  082B               	movf	??_UART_Init+1,w
  1583     05F6  00F1               	movwf	___aldiv@divisor+1
  1584     05F7  082A               	movf	??_UART_Init,w
  1585     05F8  00F0               	movwf	___aldiv@divisor
  1586     05F9  3001               	movlw	1
  1587     05FA  00F7               	movwf	___aldiv@dividend+3
  1588     05FB  3031               	movlw	49
  1589     05FC  00F6               	movwf	___aldiv@dividend+2
  1590     05FD  302D               	movlw	45
  1591     05FE  00F5               	movwf	___aldiv@dividend+1
  1592     05FF  3000               	movlw	0
  1593     0600  00F4               	movwf	___aldiv@dividend
  1594     0601  120A  118A  26A0  120A  118A  	fcall	___aldiv
  1595     0606  0870               	movf	?___aldiv,w
  1596     0607  1683               	bsf	3,5	;RP0=1, select bank1
  1597     0608  1303               	bcf	3,6	;RP1=0, select bank1
  1598     0609  0099               	movwf	25	;volatile
  1599     060A                     l39:
  1600     060A  0008               	return
  1601     060B                     __end_of_UART_Init:
  1602                           
  1603                           	psect	text7
  1604     06A0                     __ptext7:	
  1605 ;; *************** function ___aldiv *****************
  1606 ;; Defined at:
  1607 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  divisor         4    0[COMMON] long 
  1610 ;;  dividend        4    4[COMMON] long 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  quotient        4    2[BANK0 ] long 
  1613 ;;  sign            1    1[BANK0 ] unsigned char 
  1614 ;;  counter         1    0[BANK0 ] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  4    0[COMMON] long 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         8       0       0       0       0
  1625 ;;      Locals:         0       6       0       0       0
  1626 ;;      Temps:          1       0       0       0       0
  1627 ;;      Totals:         9       6       0       0       0
  1628 ;;Total ram usage:       15 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_UART_Init
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637     06A0                     ___aldiv:	
  1638                           ;psect for function ___aldiv
  1639                           
  1640     06A0                     l794:	
  1641                           ;incstack = 0
  1642                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1643                           
  1644     06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1645     06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1646     06A2  01A1               	clrf	___aldiv@sign
  1647     06A3                     l796:
  1648     06A3  1FF3               	btfss	___aldiv@divisor+3,7
  1649     06A4  2EA6               	goto	u241
  1650     06A5  2EA7               	goto	u240
  1651     06A6                     u241:
  1652     06A6  2EB4               	goto	l231
  1653     06A7                     u240:
  1654     06A7                     l798:
  1655     06A7  09F0               	comf	___aldiv@divisor,f
  1656     06A8  09F1               	comf	___aldiv@divisor+1,f
  1657     06A9  09F2               	comf	___aldiv@divisor+2,f
  1658     06AA  09F3               	comf	___aldiv@divisor+3,f
  1659     06AB  0AF0               	incf	___aldiv@divisor,f
  1660     06AC  1903               	skipnz
  1661     06AD  0AF1               	incf	___aldiv@divisor+1,f
  1662     06AE  1903               	skipnz
  1663     06AF  0AF2               	incf	___aldiv@divisor+2,f
  1664     06B0  1903               	skipnz
  1665     06B1  0AF3               	incf	___aldiv@divisor+3,f
  1666     06B2  3001               	movlw	1
  1667     06B3  00A1               	movwf	___aldiv@sign
  1668     06B4                     l231:
  1669     06B4  1FF7               	btfss	___aldiv@dividend+3,7
  1670     06B5  2EB7               	goto	u251
  1671     06B6  2EB8               	goto	u250
  1672     06B7                     u251:
  1673     06B7  2EC5               	goto	l804
  1674     06B8                     u250:
  1675     06B8                     l800:
  1676     06B8  09F4               	comf	___aldiv@dividend,f
  1677     06B9  09F5               	comf	___aldiv@dividend+1,f
  1678     06BA  09F6               	comf	___aldiv@dividend+2,f
  1679     06BB  09F7               	comf	___aldiv@dividend+3,f
  1680     06BC  0AF4               	incf	___aldiv@dividend,f
  1681     06BD  1903               	skipnz
  1682     06BE  0AF5               	incf	___aldiv@dividend+1,f
  1683     06BF  1903               	skipnz
  1684     06C0  0AF6               	incf	___aldiv@dividend+2,f
  1685     06C1  1903               	skipnz
  1686     06C2  0AF7               	incf	___aldiv@dividend+3,f
  1687     06C3                     l802:
  1688     06C3  3001               	movlw	1
  1689     06C4  06A1               	xorwf	___aldiv@sign,f
  1690     06C5                     l804:
  1691     06C5  3000               	movlw	0
  1692     06C6  00A5               	movwf	___aldiv@quotient+3
  1693     06C7  3000               	movlw	0
  1694     06C8  00A4               	movwf	___aldiv@quotient+2
  1695     06C9  3000               	movlw	0
  1696     06CA  00A3               	movwf	___aldiv@quotient+1
  1697     06CB  3000               	movlw	0
  1698     06CC  00A2               	movwf	___aldiv@quotient
  1699     06CD                     l806:
  1700     06CD  0873               	movf	___aldiv@divisor+3,w
  1701     06CE  0472               	iorwf	___aldiv@divisor+2,w
  1702     06CF  0471               	iorwf	___aldiv@divisor+1,w
  1703     06D0  0470               	iorwf	___aldiv@divisor,w
  1704     06D1  1903               	skipnz
  1705     06D2  2ED4               	goto	u261
  1706     06D3  2ED5               	goto	u260
  1707     06D4                     u261:
  1708     06D4  2F20               	goto	l826
  1709     06D5                     u260:
  1710     06D5                     l808:
  1711     06D5  3001               	movlw	1
  1712     06D6  00A0               	movwf	___aldiv@counter
  1713     06D7  2EE3               	goto	l812
  1714     06D8                     l810:
  1715     06D8  3001               	movlw	1
  1716     06D9  00F8               	movwf	??___aldiv
  1717     06DA                     u275:
  1718     06DA  1003               	clrc
  1719     06DB  0DF0               	rlf	___aldiv@divisor,f
  1720     06DC  0DF1               	rlf	___aldiv@divisor+1,f
  1721     06DD  0DF2               	rlf	___aldiv@divisor+2,f
  1722     06DE  0DF3               	rlf	___aldiv@divisor+3,f
  1723     06DF  0BF8               	decfsz	??___aldiv,f
  1724     06E0  2EDA               	goto	u275
  1725     06E1  3001               	movlw	1
  1726     06E2  07A0               	addwf	___aldiv@counter,f
  1727     06E3                     l812:
  1728     06E3  1FF3               	btfss	___aldiv@divisor+3,7
  1729     06E4  2EE6               	goto	u281
  1730     06E5  2EE7               	goto	u280
  1731     06E6                     u281:
  1732     06E6  2ED8               	goto	l810
  1733     06E7                     u280:
  1734     06E7                     l814:
  1735     06E7  3001               	movlw	1
  1736     06E8  00F8               	movwf	??___aldiv
  1737     06E9                     u295:
  1738     06E9  1003               	clrc
  1739     06EA  0DA2               	rlf	___aldiv@quotient,f
  1740     06EB  0DA3               	rlf	___aldiv@quotient+1,f
  1741     06EC  0DA4               	rlf	___aldiv@quotient+2,f
  1742     06ED  0DA5               	rlf	___aldiv@quotient+3,f
  1743     06EE  0BF8               	decfsz	??___aldiv,f
  1744     06EF  2EE9               	goto	u295
  1745     06F0                     l816:
  1746     06F0  0873               	movf	___aldiv@divisor+3,w
  1747     06F1  0277               	subwf	___aldiv@dividend+3,w
  1748     06F2  1D03               	skipz
  1749     06F3  2EFE               	goto	u305
  1750     06F4  0872               	movf	___aldiv@divisor+2,w
  1751     06F5  0276               	subwf	___aldiv@dividend+2,w
  1752     06F6  1D03               	skipz
  1753     06F7  2EFE               	goto	u305
  1754     06F8  0871               	movf	___aldiv@divisor+1,w
  1755     06F9  0275               	subwf	___aldiv@dividend+1,w
  1756     06FA  1D03               	skipz
  1757     06FB  2EFE               	goto	u305
  1758     06FC  0870               	movf	___aldiv@divisor,w
  1759     06FD  0274               	subwf	___aldiv@dividend,w
  1760     06FE                     u305:
  1761     06FE  1C03               	skipc
  1762     06FF  2F01               	goto	u301
  1763     0700  2F02               	goto	u300
  1764     0701                     u301:
  1765     0701  2F11               	goto	l822
  1766     0702                     u300:
  1767     0702                     l818:
  1768     0702  0870               	movf	___aldiv@divisor,w
  1769     0703  02F4               	subwf	___aldiv@dividend,f
  1770     0704  0871               	movf	___aldiv@divisor+1,w
  1771     0705  1C03               	skipc
  1772     0706  0F71               	incfsz	___aldiv@divisor+1,w
  1773     0707  02F5               	subwf	___aldiv@dividend+1,f
  1774     0708  0872               	movf	___aldiv@divisor+2,w
  1775     0709  1C03               	skipc
  1776     070A  0F72               	incfsz	___aldiv@divisor+2,w
  1777     070B  02F6               	subwf	___aldiv@dividend+2,f
  1778     070C  0873               	movf	___aldiv@divisor+3,w
  1779     070D  1C03               	skipc
  1780     070E  0F73               	incfsz	___aldiv@divisor+3,w
  1781     070F  02F7               	subwf	___aldiv@dividend+3,f
  1782     0710                     l820:
  1783     0710  1422               	bsf	___aldiv@quotient,0
  1784     0711                     l822:
  1785     0711  3001               	movlw	1
  1786     0712                     u315:
  1787     0712  1003               	clrc
  1788     0713  0CF3               	rrf	___aldiv@divisor+3,f
  1789     0714  0CF2               	rrf	___aldiv@divisor+2,f
  1790     0715  0CF1               	rrf	___aldiv@divisor+1,f
  1791     0716  0CF0               	rrf	___aldiv@divisor,f
  1792     0717  3EFF               	addlw	-1
  1793     0718  1D03               	skipz
  1794     0719  2F12               	goto	u315
  1795     071A                     l824:
  1796     071A  3001               	movlw	1
  1797     071B  02A0               	subwf	___aldiv@counter,f
  1798     071C  1D03               	btfss	3,2
  1799     071D  2F1F               	goto	u321
  1800     071E  2F20               	goto	u320
  1801     071F                     u321:
  1802     071F  2EE7               	goto	l814
  1803     0720                     u320:
  1804     0720                     l826:
  1805     0720  0821               	movf	___aldiv@sign,w
  1806     0721  1903               	btfsc	3,2
  1807     0722  2F24               	goto	u331
  1808     0723  2F25               	goto	u330
  1809     0724                     u331:
  1810     0724  2F30               	goto	l830
  1811     0725                     u330:
  1812     0725                     l828:
  1813     0725  09A2               	comf	___aldiv@quotient,f
  1814     0726  09A3               	comf	___aldiv@quotient+1,f
  1815     0727  09A4               	comf	___aldiv@quotient+2,f
  1816     0728  09A5               	comf	___aldiv@quotient+3,f
  1817     0729  0AA2               	incf	___aldiv@quotient,f
  1818     072A  1903               	skipnz
  1819     072B  0AA3               	incf	___aldiv@quotient+1,f
  1820     072C  1903               	skipnz
  1821     072D  0AA4               	incf	___aldiv@quotient+2,f
  1822     072E  1903               	skipnz
  1823     072F  0AA5               	incf	___aldiv@quotient+3,f
  1824     0730                     l830:
  1825     0730  0825               	movf	___aldiv@quotient+3,w
  1826     0731  00F3               	movwf	?___aldiv+3
  1827     0732  0824               	movf	___aldiv@quotient+2,w
  1828     0733  00F2               	movwf	?___aldiv+2
  1829     0734  0823               	movf	___aldiv@quotient+1,w
  1830     0735  00F1               	movwf	?___aldiv+1
  1831     0736  0822               	movf	___aldiv@quotient,w
  1832     0737  00F0               	movwf	?___aldiv
  1833     0738                     l241:
  1834     0738  0008               	return
  1835     0739                     __end_of___aldiv:
  1836     0002                     ___latbits      equ	2
  1837     007E                     btemp           set	126	;btemp
  1838     007E                     wtemp0          set	126
  1839                           
  1840                           	psect	config
  1841                           
  1842                           ;Config register CONFIG @ 0x2007
  1843                           ;	Oscillator Selection bits
  1844                           ;	FOSC = HS, HS oscillator
  1845                           ;	Watchdog Timer Enable bit
  1846                           ;	WDTE = OFF, WDT disabled
  1847                           ;	Power-up Timer Enable bit
  1848                           ;	PWRTE = OFF, PWRT disabled
  1849                           ;	Brown-out Reset Enable bit
  1850                           ;	BOREN = OFF, BOR disabled
  1851                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1852                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1853                           ;	Data EEPROM Memory Code Protection bit
  1854                           ;	CPD = OFF, Data EEPROM code protection off
  1855                           ;	Flash Program Memory Write Enable bits
  1856                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1857                           ;	In-Circuit Debugger Mode bit
  1858                           ;	DEBUG = 0x1, unprogrammed default
  1859                           ;	Flash Program Memory Code Protection bit
  1860                           ;	CP = OFF, Code protection off
  1861     2007                     	org	8199
  1862     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    298
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _displayCount->_display4Chars
    _display4Chars->_send16Bit
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1044
                                             18 BANK0      5     5      0
                          _UART_Init
                        _UART_RxChar
                        _UART_TxChar
                       _displayCount
                          _send16Bit
 ---------------------------------------------------------------------------------
 (1) _displayCount                                         3     1      2     309
                                              0 BANK0      3     1      2
                      _display4Chars
 ---------------------------------------------------------------------------------
 (2) _display4Chars                                        4     1      3     230
                                             10 COMMON     4     1      3
                          _send16Bit
 ---------------------------------------------------------------------------------
 (1) _send16Bit                                           10     9      1     129
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (1) _UART_TxChar                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           12     8      4     325
                                              6 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     302
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_RxChar
   _UART_TxChar
   _displayCount
     _display4Chars
       _send16Bit
   _send16Bit

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     23      23     28.7%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      37      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jan 24 10:58:25 2025

                      pc 0002                       l50 0569                       l42 056D  
                     l51 056B                       l44 0573                       l45 0576  
                     l61 05B5                       l54 063D                       l39 060A  
                     l55 068F           ?_display4Chars 007A                       l48 0563  
                     l56 0645                       l64 0593                       l58 069F  
                     fsr 0004            ?_displayCount 0020                      l231 06B4  
                    l241 0738                      l800 06B8                      l810 06D8  
                    l802 06C3                      l820 0710                      l812 06E3  
                    l804 06C5                      l900 07C7                      l830 0730  
                    l822 0711                      l814 06E7                      l806 06CD  
                    l902 07D4                      l824 071A                      l816 06F0  
                    l808 06D5                      l840 05C0                      l818 0702  
                    l826 0720                      l842 05C1                      l834 05B6  
                    l850 056D                      l770 062B                      l828 0725  
                    l844 05C2                      l836 05BA                      l852 0574  
                    l780 0641                      l772 062E                      l764 060C  
                    l860 057A                      l846 05C5                      l838 05BD  
                    l854 0563                      l790 0692                      l782 0648  
                    l774 063B                      l766 061B                      l870 0757  
                    l862 0739                      l848 05C6                      l856 056A  
                    l784 0655                      l768 061E                      l792 0595  
                    l880 0789                      l872 075E                      l864 073F  
                    l794 06A0                      l786 0665                      l882 0791  
                    l874 076D                      l866 0747                      l796 06A3  
                    l788 0682                      l884 07A3                      l876 0772  
                    l868 074F                      l798 06A7                      l894 07B3  
                    l886 07AB                      l878 0784                      l896 07BB  
                    l888 07B1                      l898 07C1                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      u210 0641  
                    u211 0640                      u300 0702                      u301 0701  
                    u230 068F                      u231 068E                      u320 0720  
                    u240 06A7                      u400 07D4                      u321 071F  
                    u305 06FE                      u241 06A6                      u225 0676  
                    u401 07D3                      u330 0725                      u250 06B8  
                    u331 0724                      u315 0712                      u251 06B7  
                    u235 068B                      u260 06D5                      u340 05DC  
                    u261 06D4                      u405 07D0                      u350 05E6  
                    u351 05E7                      u280 06E7                      u352 05EC  
                    u360 0573                      u281 06E6                      u353 05ED  
                    u345 05D7                      u361 0572                      u417 0624  
                    u370 0569                      u275 06DA                      u371 0568  
                    u427 0634                      u380 07A3                      u437 064E  
                    u381 07A2                      u390 07B1                      u295 06E9  
                    u447 065E                      u391 07B0                      u457 066E  
                    u467 0698                      _TX9 04C6                      fsr0 0004  
                    indf 0000                     _CREN 00C4                     _RCIF 0065  
                   _SPEN 00C7                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     _main 0739                     btemp 007E  
                   start 0000           ??_displayCount 007E          __end_of___aldiv 0739  
                  ?_main 0070                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    _TXREG 0019                    main@c 0034  
                  main@i 0035                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC          ??_display4Chars 007D  
           __end_of_main 07FC                   ??_main 007E             ?_UART_RxChar 0070  
           ?_UART_TxChar 0070        __end_of_UART_Init 060B                ??___aldiv 0078  
       __end_ofmain@text 093C        send16Bit@dataByte 0070     __end_of_displayCount 0594  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0739  
      displayCount@count 0020               __stringtab 0800                  ___aldiv 06A0  
                __ptext1 0577                  __ptext2 0594                  __ptext3 060B  
                __ptext4 056C                  __ptext5 0563                  __ptext6 05B6  
                __ptext7 06A0        __end_of_send16Bit 06A0         ___aldiv@dividend 0074  
   end_of_initialization 07FC         ___aldiv@quotient 0022             __pstringtext 0800  
  __end_of_display4Chars 05B6                _UART_Init 05B6             _displayCount 0577  
             ?_UART_Init 0026      start_initialization 07FC               send16Bit@i 0078  
       send16Bit@address 0075                ___latbits 0002            __pcstackBANK0 0020  
        display4Chars@c1 007D          display4Chars@c2 007A          display4Chars@c3 007B  
        display4Chars@c4 007C                 ?___aldiv 0070              ??_UART_Init 002A  
          UART_TxChar@ch 0070                _send16Bit 060B          ___aldiv@divisor 0070  
     displayCount@letter 0022          ___aldiv@counter 0020       displayCount@suffix 0021  
          ??_UART_RxChar 0070            ??_UART_TxChar 0070        UART_Init@baudRate 0026  
            __stringbase 0812                main@input 0032               ?_send16Bit 0070  
    __end_of_UART_RxChar 056C      __end_of_UART_TxChar 0577       __end_of__stringtab 0812  
          send16Bit@word 0076                 main@text 0812              ??_send16Bit 0071  
            _UART_RxChar 0563                stringcode 080A              _UART_TxChar 056C  
          _display4Chars 0594                 stringtab 0800             ___aldiv@sign 0021  

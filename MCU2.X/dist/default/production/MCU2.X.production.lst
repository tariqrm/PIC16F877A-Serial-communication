

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jan 24 10:59:50 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177     001A                     _RCREG          set	26
   178     0019                     _TXREG          set	25
   179     0007                     _PORTC          set	7
   180     0065                     _RCIF           set	101
   181     0064                     _TXIF           set	100
   182     00C4                     _CREN           set	196
   183     00C7                     _SPEN           set	199
   184     0099                     _SPBRG          set	153
   185     0087                     _TRISC          set	135
   186     04C5                     _TXEN           set	1221
   187     04C4                     _SYNC           set	1220
   188     04C6                     _TX9            set	1222
   189                           
   190                           	psect	cinit
   191     07FC                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07FC                     __initialization:
   195     07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     07FC                     __end_of__initialization:
   199     07FC  0183               	clrf	3
   200     07FD  120A  118A  2EEE   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	cstackCOMMON
   203     0070                     __pcstackCOMMON:
   204     0070                     ?_UART_TxChar:
   205     0070                     ?_UART_RxChar:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?___aldiv:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     UART_TxChar@ch:	
   215                           ; 4 bytes @ 0x0
   216                           
   217     0070                     ___aldiv@divisor:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ??_UART_TxChar:	
   221                           ; 4 bytes @ 0x0
   222                           
   223     0070                     ??_UART_RxChar:	
   224                           ; 1 bytes @ 0x0
   225                           
   226                           
   227                           ; 1 bytes @ 0x0
   228     0070                     	ds	4
   229     0074                     ___aldiv@dividend:
   230                           
   231                           ; 4 bytes @ 0x4
   232     0074                     	ds	4
   233     0078                     ??___aldiv:
   234                           
   235                           ; 1 bytes @ 0x8
   236     0078                     	ds	1
   237     0079                     ??_main:
   238                           
   239                           	psect	cstackBANK0
   240     0020                     __pcstackBANK0:	
   241                           ; 1 bytes @ 0x9
   242                           
   243     0020                     ___aldiv@counter:
   244                           
   245                           ; 1 bytes @ 0x0
   246     0020                     	ds	1
   247     0021                     ___aldiv@sign:
   248                           
   249                           ; 1 bytes @ 0x1
   250     0021                     	ds	1
   251     0022                     ___aldiv@quotient:
   252                           
   253                           ; 4 bytes @ 0x2
   254     0022                     	ds	4
   255     0026                     ?_UART_Init:
   256     0026                     UART_Init@baudRate:	
   257                           ; 1 bytes @ 0x6
   258                           
   259                           
   260                           ; 4 bytes @ 0x6
   261     0026                     	ds	4
   262     002A                     ??_UART_Init:
   263                           
   264                           ; 1 bytes @ 0xA
   265     002A                     	ds	8
   266     0032                     main@countD:
   267                           
   268                           ; 2 bytes @ 0x12
   269     0032                     	ds	2
   270     0034                     main@countE:
   271                           
   272                           ; 2 bytes @ 0x14
   273     0034                     	ds	2
   274     0036                     main@countF:
   275                           
   276                           ; 2 bytes @ 0x16
   277     0036                     	ds	2
   278     0038                     main@c_51:
   279                           
   280                           ; 1 bytes @ 0x18
   281     0038                     	ds	1
   282                           
   283                           	psect	maintext
   284     06EE                     __pmaintext:	
   285 ;;
   286 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   287 ;;
   288 ;; *************** function _main *****************
   289 ;; Defined at:
   290 ;;		line 51 in file "main.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  c               1   24[BANK0 ] unsigned char 
   295 ;;  input          10    0        unsigned char [10]
   296 ;;  countF          2   22[BANK0 ] int 
   297 ;;  countE          2   20[BANK0 ] int 
   298 ;;  countD          2   18[BANK0 ] int 
   299 ;;  i               2    0        int 
   300 ;;  c               1    0        unsigned char 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, pclath, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : B00/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       7       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         0       7       0       0       0
   314 ;;Total ram usage:        7 bytes
   315 ;; Hardware stack levels required when called: 2
   316 ;; This function calls:
   317 ;;		_UART_Init
   318 ;;		_UART_RxChar
   319 ;;		_UART_TxChar
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325     06EE                     _main:	
   326                           ;psect for function _main
   327                           
   328     06EE                     l755:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   331                           
   332                           
   333                           ;main.c: 56:         }
   334     06EE  1283               	bcf	3,5	;RP0=0, select bank0
   335     06EF  1303               	bcf	3,6	;RP1=0, select bank0
   336     06F0  01B2               	clrf	main@countD
   337     06F1  01B3               	clrf	main@countD+1
   338     06F2  01B4               	clrf	main@countE
   339     06F3  01B5               	clrf	main@countE+1
   340     06F4  01B6               	clrf	main@countF
   341     06F5  01B7               	clrf	main@countF+1
   342     06F6                     l757:
   343                           
   344                           ;main.c: 58:         if(c == 'D'){
   345     06F6  3000               	movlw	0
   346     06F7  00A9               	movwf	UART_Init@baudRate+3
   347     06F8  3000               	movlw	0
   348     06F9  00A8               	movwf	UART_Init@baudRate+2
   349     06FA  3025               	movlw	37
   350     06FB  00A7               	movwf	UART_Init@baudRate+1
   351     06FC  3080               	movlw	128
   352     06FD  00A6               	movwf	UART_Init@baudRate
   353     06FE  120A  118A  2699  120A  118A  	fcall	_UART_Init
   354     0703                     l759:
   355                           
   356                           ;main.c: 61:         else if(c == 'E'){;main.c: 62:             countE++;
   357     0703  120A  118A  2685  120A  118A  	fcall	_UART_RxChar
   358     0708  1283               	bcf	3,5	;RP0=0, select bank0
   359     0709  1303               	bcf	3,6	;RP1=0, select bank0
   360     070A  00B8               	movwf	main@c_51
   361     070B                     l761:
   362                           
   363                           ;main.c: 63:         }
   364     070B  0838               	movf	main@c_51,w
   365     070C  120A  118A  268E  120A  118A  	fcall	_UART_TxChar
   366     0711                     l763:
   367                           
   368                           ;main.c: 65:             countF++;
   369     0711  300A               	movlw	10
   370     0712  1283               	bcf	3,5	;RP0=0, select bank0
   371     0713  1303               	bcf	3,6	;RP1=0, select bank0
   372     0714  0638               	xorwf	main@c_51,w
   373     0715  1D03               	btfss	3,2
   374     0716  2F18               	goto	u331
   375     0717  2F19               	goto	u330
   376     0718                     u331:
   377     0718  2F1A               	goto	l767
   378     0719                     u330:
   379     0719  2F42               	goto	l779
   380     071A                     l767:
   381                           
   382                           ;main.c: 70:     UART_TxChar('#');
   383     071A  3044               	movlw	68
   384     071B  0638               	xorwf	main@c_51,w
   385     071C  1D03               	btfss	3,2
   386     071D  2F1F               	goto	u341
   387     071E  2F20               	goto	u340
   388     071F                     u341:
   389     071F  2F27               	goto	l771
   390     0720                     u340:
   391     0720                     l769:
   392                           
   393                           ;main.c: 71: 
   394     0720  3001               	movlw	1
   395     0721  07B2               	addwf	main@countD,f
   396     0722  1803               	skipnc
   397     0723  0AB3               	incf	main@countD+1,f
   398     0724  3000               	movlw	0
   399     0725  07B3               	addwf	main@countD+1,f
   400                           
   401                           ;main.c: 72:     UART_TxChar(countD);
   402     0726  2F03               	goto	l759
   403     0727                     l771:
   404     0727  3045               	movlw	69
   405     0728  0638               	xorwf	main@c_51,w
   406     0729  1D03               	btfss	3,2
   407     072A  2F2C               	goto	u351
   408     072B  2F2D               	goto	u350
   409     072C                     u351:
   410     072C  2F34               	goto	l775
   411     072D                     u350:
   412     072D                     l773:
   413                           
   414                           ;main.c: 74:     UART_TxChar(countE);
   415     072D  3001               	movlw	1
   416     072E  07B4               	addwf	main@countE,f
   417     072F  1803               	skipnc
   418     0730  0AB5               	incf	main@countE+1,f
   419     0731  3000               	movlw	0
   420     0732  07B5               	addwf	main@countE+1,f
   421                           
   422                           ;main.c: 75: 
   423     0733  2F03               	goto	l759
   424     0734                     l775:
   425     0734  3046               	movlw	70
   426     0735  0638               	xorwf	main@c_51,w
   427     0736  1D03               	btfss	3,2
   428     0737  2F39               	goto	u361
   429     0738  2F3A               	goto	u360
   430     0739                     u361:
   431     0739  2F41               	goto	l48
   432     073A                     u360:
   433     073A                     l777:
   434                           
   435                           ;main.c: 77: }
   436     073A  3001               	movlw	1
   437     073B  07B6               	addwf	main@countF,f
   438     073C  1803               	skipnc
   439     073D  0AB7               	incf	main@countF+1,f
   440     073E  3000               	movlw	0
   441     073F  07B7               	addwf	main@countF+1,f
   442     0740  2F03               	goto	l759
   443     0741                     l48:
   444     0741  2F03               	goto	l759
   445     0742                     l779:
   446     0742  3023               	movlw	35
   447     0743  120A  118A  268E  120A  118A  	fcall	_UART_TxChar
   448     0748  1283               	bcf	3,5	;RP0=0, select bank0
   449     0749  1303               	bcf	3,6	;RP1=0, select bank0
   450     074A  0832               	movf	main@countD,w
   451     074B  120A  118A  268E  120A  118A  	fcall	_UART_TxChar
   452     0750  1283               	bcf	3,5	;RP0=0, select bank0
   453     0751  1303               	bcf	3,6	;RP1=0, select bank0
   454     0752  0834               	movf	main@countE,w
   455     0753  120A  118A  268E  120A  118A  	fcall	_UART_TxChar
   456     0758  1283               	bcf	3,5	;RP0=0, select bank0
   457     0759  1303               	bcf	3,6	;RP1=0, select bank0
   458     075A  0836               	movf	main@countF,w
   459     075B  120A  118A  268E  120A  118A  	fcall	_UART_TxChar
   460     0760                     l53:
   461     0760  120A  118A  2800   	ljmp	start
   462     0763                     __end_of_main:
   463                           
   464                           	psect	text1
   465     068E                     __ptext1:	
   466 ;; *************** function _UART_TxChar *****************
   467 ;; Defined at:
   468 ;;		line 37 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  ch              1    wreg     unsigned char 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  ch              1    0[COMMON] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         1       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         1       0       0       0       0
   486 ;;Total ram usage:        1 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495     068E                     _UART_TxChar:	
   496                           ;psect for function _UART_TxChar
   497                           
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in _UART_TxChar: [wreg]
   501                           ;UART_TxChar@ch stored from wreg
   502     068E  00F0               	movwf	UART_TxChar@ch
   503     068F                     l745:
   504     068F                     l30:	
   505                           ;main.c: 37: };main.c: 38: ;main.c: 39: void main(void)
   506                           
   507     068F  1283               	bcf	3,5	;RP0=0, select bank0
   508     0690  1303               	bcf	3,6	;RP1=0, select bank0
   509     0691  1E0C               	btfss	12,4	;volatile
   510     0692  2E94               	goto	u311
   511     0693  2E95               	goto	u310
   512     0694                     u311:
   513     0694  2E8F               	goto	l30
   514     0695                     u310:
   515     0695                     l32:
   516                           
   517                           ;main.c: 40: {
   518     0695  120C               	bcf	12,4	;volatile
   519     0696                     l747:
   520                           
   521                           ;main.c: 41:     char input[10];
   522     0696  0870               	movf	UART_TxChar@ch,w
   523     0697  0099               	movwf	25	;volatile
   524     0698                     l33:
   525     0698  0008               	return
   526     0699                     __end_of_UART_TxChar:
   527                           
   528                           	psect	text2
   529     0685                     __ptext2:	
   530 ;; *************** function _UART_RxChar *****************
   531 ;; Defined at:
   532 ;;		line 44 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      unsigned char 
   539 ;; Registers used:
   540 ;;		wreg
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559     0685                     _UART_RxChar:	
   560                           ;psect for function _UART_RxChar
   561                           
   562     0685                     l749:	
   563                           ;incstack = 0
   564                           ; Regs used in _UART_RxChar: [wreg]
   565                           
   566     0685                     l36:	
   567                           ;main.c: 46:     UART_Init(9600);
   568                           
   569     0685  1283               	bcf	3,5	;RP0=0, select bank0
   570     0686  1303               	bcf	3,6	;RP1=0, select bank0
   571     0687  1E8C               	btfss	12,5	;volatile
   572     0688  2E8A               	goto	u321
   573     0689  2E8B               	goto	u320
   574     068A                     u321:
   575     068A  2E85               	goto	l36
   576     068B                     u320:
   577     068B                     l38:
   578                           
   579                           ;main.c: 47: 
   580     068B  128C               	bcf	12,5	;volatile
   581     068C                     l751:
   582                           
   583                           ;main.c: 48:     while(1)
   584     068C  081A               	movf	26,w	;volatile
   585     068D                     l39:
   586     068D  0008               	return
   587     068E                     __end_of_UART_RxChar:
   588                           
   589                           	psect	text3
   590     0699                     __ptext3:	
   591 ;; *************** function _UART_Init *****************
   592 ;; Defined at:
   593 ;;		line 20 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  baudRate        4    6[BANK0 ] long 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       4       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       8       0       0       0
   610 ;;      Totals:         0      12       0       0       0
   611 ;;Total ram usage:       12 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 1
   614 ;; This function calls:
   615 ;;		___aldiv
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621     0699                     _UART_Init:	
   622                           ;psect for function _UART_Init
   623                           
   624     0699                     l729:	
   625                           ;incstack = 0
   626                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   627                           
   628                           
   629                           ;main.c: 20: ;main.c: 21: ;main.c: 23: }
   630     0699  3080               	movlw	128
   631     069A  1683               	bsf	3,5	;RP0=1, select bank1
   632     069B  1303               	bcf	3,6	;RP1=0, select bank1
   633     069C  0087               	movwf	7	;volatile
   634     069D                     l731:
   635                           
   636                           ;main.c: 24: 
   637     069D  1283               	bcf	3,5	;RP0=0, select bank0
   638     069E  1303               	bcf	3,6	;RP1=0, select bank0
   639     069F  0187               	clrf	7	;volatile
   640     06A0                     l733:
   641                           
   642                           ;main.c: 26: {
   643     06A0  1683               	bsf	3,5	;RP0=1, select bank1
   644     06A1  1303               	bcf	3,6	;RP1=0, select bank1
   645     06A2  1318               	bcf	24,6	;volatile
   646     06A3                     l735:
   647                           
   648                           ;main.c: 27:     while(TXIF==0);
   649     06A3  1218               	bcf	24,4	;volatile
   650     06A4                     l737:
   651                           
   652                           ;main.c: 28:     TXIF = 0;
   653     06A4  1698               	bsf	24,5	;volatile
   654     06A5                     l739:
   655                           
   656                           ;main.c: 30: }
   657     06A5  1283               	bcf	3,5	;RP0=0, select bank0
   658     06A6  1303               	bcf	3,6	;RP1=0, select bank0
   659     06A7  1798               	bsf	24,7	;volatile
   660     06A8                     l741:
   661                           
   662                           ;main.c: 31: 
   663     06A8  1618               	bsf	24,4	;volatile
   664     06A9                     l743:
   665                           
   666                           ;main.c: 34:     while(RCIF==0);
   667     06A9  3040               	movlw	64
   668     06AA  00AA               	movwf	??_UART_Init
   669     06AB  3000               	movlw	0
   670     06AC  00AB               	movwf	??_UART_Init+1
   671     06AD  3000               	movlw	0
   672     06AE  00AC               	movwf	??_UART_Init+2
   673     06AF  3000               	movlw	0
   674     06B0  00AD               	movwf	??_UART_Init+3
   675     06B1  0826               	movf	UART_Init@baudRate,w
   676     06B2  00AE               	movwf	??_UART_Init+4
   677     06B3  0827               	movf	UART_Init@baudRate+1,w
   678     06B4  00AF               	movwf	??_UART_Init+5
   679     06B5  0828               	movf	UART_Init@baudRate+2,w
   680     06B6  00B0               	movwf	??_UART_Init+6
   681     06B7  0829               	movf	UART_Init@baudRate+3,w
   682     06B8  00B1               	movwf	??_UART_Init+7
   683     06B9  3006               	movlw	6
   684     06BA                     u295:
   685     06BA  1003               	clrc
   686     06BB  0DAE               	rlf	??_UART_Init+4,f
   687     06BC  0DAF               	rlf	??_UART_Init+5,f
   688     06BD  0DB0               	rlf	??_UART_Init+6,f
   689     06BE  0DB1               	rlf	??_UART_Init+7,f
   690     06BF                     u290:
   691     06BF  3EFF               	addlw	-1
   692     06C0  1D03               	skipz
   693     06C1  2EBA               	goto	u295
   694     06C2  082E               	movf	??_UART_Init+4,w
   695     06C3  07AA               	addwf	??_UART_Init,f
   696     06C4  082F               	movf	??_UART_Init+5,w
   697     06C5  1803               	skipnc
   698     06C6  0F2F               	incfsz	??_UART_Init+5,w
   699     06C7  2EC9               	goto	u300
   700     06C8  2ECA               	goto	u301
   701     06C9                     u300:
   702     06C9  07AB               	addwf	??_UART_Init+1,f
   703     06CA                     u301:
   704     06CA  0830               	movf	??_UART_Init+6,w
   705     06CB  1803               	skipnc
   706     06CC  0F30               	incfsz	??_UART_Init+6,w
   707     06CD  2ECF               	goto	u302
   708     06CE  2ED0               	goto	u303
   709     06CF                     u302:
   710     06CF  07AC               	addwf	??_UART_Init+2,f
   711     06D0                     u303:
   712     06D0  0831               	movf	??_UART_Init+7,w
   713     06D1  1803               	skipnc
   714     06D2  0A31               	incf	??_UART_Init+7,w
   715     06D3  07AD               	addwf	??_UART_Init+3,f
   716     06D4  082D               	movf	??_UART_Init+3,w
   717     06D5  00F3               	movwf	___aldiv@divisor+3
   718     06D6  082C               	movf	??_UART_Init+2,w
   719     06D7  00F2               	movwf	___aldiv@divisor+2
   720     06D8  082B               	movf	??_UART_Init+1,w
   721     06D9  00F1               	movwf	___aldiv@divisor+1
   722     06DA  082A               	movf	??_UART_Init,w
   723     06DB  00F0               	movwf	___aldiv@divisor
   724     06DC  3001               	movlw	1
   725     06DD  00F7               	movwf	___aldiv@dividend+3
   726     06DE  3031               	movlw	49
   727     06DF  00F6               	movwf	___aldiv@dividend+2
   728     06E0  302D               	movlw	45
   729     06E1  00F5               	movwf	___aldiv@dividend+1
   730     06E2  3000               	movlw	0
   731     06E3  00F4               	movwf	___aldiv@dividend
   732     06E4  120A  118A  2763  120A  118A  	fcall	___aldiv
   733     06E9  0870               	movf	?___aldiv,w
   734     06EA  1683               	bsf	3,5	;RP0=1, select bank1
   735     06EB  1303               	bcf	3,6	;RP1=0, select bank1
   736     06EC  0099               	movwf	25	;volatile
   737     06ED                     l27:
   738     06ED  0008               	return
   739     06EE                     __end_of_UART_Init:
   740                           
   741                           	psect	text4
   742     0763                     __ptext4:	
   743 ;; *************** function ___aldiv *****************
   744 ;; Defined at:
   745 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  divisor         4    0[COMMON] long 
   748 ;;  dividend        4    4[COMMON] long 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  quotient        4    2[BANK0 ] long 
   751 ;;  sign            1    1[BANK0 ] unsigned char 
   752 ;;  counter         1    0[BANK0 ] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  4    0[COMMON] long 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         8       0       0       0       0
   763 ;;      Locals:         0       6       0       0       0
   764 ;;      Temps:          1       0       0       0       0
   765 ;;      Totals:         9       6       0       0       0
   766 ;;Total ram usage:       15 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_UART_Init
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775     0763                     ___aldiv:	
   776                           ;psect for function ___aldiv
   777                           
   778     0763                     l689:	
   779                           ;incstack = 0
   780                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   781                           
   782     0763  1283               	bcf	3,5	;RP0=0, select bank0
   783     0764  1303               	bcf	3,6	;RP1=0, select bank0
   784     0765  01A1               	clrf	___aldiv@sign
   785     0766                     l691:
   786     0766  1FF3               	btfss	___aldiv@divisor+3,7
   787     0767  2F69               	goto	u191
   788     0768  2F6A               	goto	u190
   789     0769                     u191:
   790     0769  2F77               	goto	l204
   791     076A                     u190:
   792     076A                     l693:
   793     076A  09F0               	comf	___aldiv@divisor,f
   794     076B  09F1               	comf	___aldiv@divisor+1,f
   795     076C  09F2               	comf	___aldiv@divisor+2,f
   796     076D  09F3               	comf	___aldiv@divisor+3,f
   797     076E  0AF0               	incf	___aldiv@divisor,f
   798     076F  1903               	skipnz
   799     0770  0AF1               	incf	___aldiv@divisor+1,f
   800     0771  1903               	skipnz
   801     0772  0AF2               	incf	___aldiv@divisor+2,f
   802     0773  1903               	skipnz
   803     0774  0AF3               	incf	___aldiv@divisor+3,f
   804     0775  3001               	movlw	1
   805     0776  00A1               	movwf	___aldiv@sign
   806     0777                     l204:
   807     0777  1FF7               	btfss	___aldiv@dividend+3,7
   808     0778  2F7A               	goto	u201
   809     0779  2F7B               	goto	u200
   810     077A                     u201:
   811     077A  2F88               	goto	l699
   812     077B                     u200:
   813     077B                     l695:
   814     077B  09F4               	comf	___aldiv@dividend,f
   815     077C  09F5               	comf	___aldiv@dividend+1,f
   816     077D  09F6               	comf	___aldiv@dividend+2,f
   817     077E  09F7               	comf	___aldiv@dividend+3,f
   818     077F  0AF4               	incf	___aldiv@dividend,f
   819     0780  1903               	skipnz
   820     0781  0AF5               	incf	___aldiv@dividend+1,f
   821     0782  1903               	skipnz
   822     0783  0AF6               	incf	___aldiv@dividend+2,f
   823     0784  1903               	skipnz
   824     0785  0AF7               	incf	___aldiv@dividend+3,f
   825     0786                     l697:
   826     0786  3001               	movlw	1
   827     0787  06A1               	xorwf	___aldiv@sign,f
   828     0788                     l699:
   829     0788  3000               	movlw	0
   830     0789  00A5               	movwf	___aldiv@quotient+3
   831     078A  3000               	movlw	0
   832     078B  00A4               	movwf	___aldiv@quotient+2
   833     078C  3000               	movlw	0
   834     078D  00A3               	movwf	___aldiv@quotient+1
   835     078E  3000               	movlw	0
   836     078F  00A2               	movwf	___aldiv@quotient
   837     0790                     l701:
   838     0790  0873               	movf	___aldiv@divisor+3,w
   839     0791  0472               	iorwf	___aldiv@divisor+2,w
   840     0792  0471               	iorwf	___aldiv@divisor+1,w
   841     0793  0470               	iorwf	___aldiv@divisor,w
   842     0794  1903               	skipnz
   843     0795  2F97               	goto	u211
   844     0796  2F98               	goto	u210
   845     0797                     u211:
   846     0797  2FE3               	goto	l721
   847     0798                     u210:
   848     0798                     l703:
   849     0798  3001               	movlw	1
   850     0799  00A0               	movwf	___aldiv@counter
   851     079A  2FA6               	goto	l707
   852     079B                     l705:
   853     079B  3001               	movlw	1
   854     079C  00F8               	movwf	??___aldiv
   855     079D                     u225:
   856     079D  1003               	clrc
   857     079E  0DF0               	rlf	___aldiv@divisor,f
   858     079F  0DF1               	rlf	___aldiv@divisor+1,f
   859     07A0  0DF2               	rlf	___aldiv@divisor+2,f
   860     07A1  0DF3               	rlf	___aldiv@divisor+3,f
   861     07A2  0BF8               	decfsz	??___aldiv,f
   862     07A3  2F9D               	goto	u225
   863     07A4  3001               	movlw	1
   864     07A5  07A0               	addwf	___aldiv@counter,f
   865     07A6                     l707:
   866     07A6  1FF3               	btfss	___aldiv@divisor+3,7
   867     07A7  2FA9               	goto	u231
   868     07A8  2FAA               	goto	u230
   869     07A9                     u231:
   870     07A9  2F9B               	goto	l705
   871     07AA                     u230:
   872     07AA                     l709:
   873     07AA  3001               	movlw	1
   874     07AB  00F8               	movwf	??___aldiv
   875     07AC                     u245:
   876     07AC  1003               	clrc
   877     07AD  0DA2               	rlf	___aldiv@quotient,f
   878     07AE  0DA3               	rlf	___aldiv@quotient+1,f
   879     07AF  0DA4               	rlf	___aldiv@quotient+2,f
   880     07B0  0DA5               	rlf	___aldiv@quotient+3,f
   881     07B1  0BF8               	decfsz	??___aldiv,f
   882     07B2  2FAC               	goto	u245
   883     07B3                     l711:
   884     07B3  0873               	movf	___aldiv@divisor+3,w
   885     07B4  0277               	subwf	___aldiv@dividend+3,w
   886     07B5  1D03               	skipz
   887     07B6  2FC1               	goto	u255
   888     07B7  0872               	movf	___aldiv@divisor+2,w
   889     07B8  0276               	subwf	___aldiv@dividend+2,w
   890     07B9  1D03               	skipz
   891     07BA  2FC1               	goto	u255
   892     07BB  0871               	movf	___aldiv@divisor+1,w
   893     07BC  0275               	subwf	___aldiv@dividend+1,w
   894     07BD  1D03               	skipz
   895     07BE  2FC1               	goto	u255
   896     07BF  0870               	movf	___aldiv@divisor,w
   897     07C0  0274               	subwf	___aldiv@dividend,w
   898     07C1                     u255:
   899     07C1  1C03               	skipc
   900     07C2  2FC4               	goto	u251
   901     07C3  2FC5               	goto	u250
   902     07C4                     u251:
   903     07C4  2FD4               	goto	l717
   904     07C5                     u250:
   905     07C5                     l713:
   906     07C5  0870               	movf	___aldiv@divisor,w
   907     07C6  02F4               	subwf	___aldiv@dividend,f
   908     07C7  0871               	movf	___aldiv@divisor+1,w
   909     07C8  1C03               	skipc
   910     07C9  0F71               	incfsz	___aldiv@divisor+1,w
   911     07CA  02F5               	subwf	___aldiv@dividend+1,f
   912     07CB  0872               	movf	___aldiv@divisor+2,w
   913     07CC  1C03               	skipc
   914     07CD  0F72               	incfsz	___aldiv@divisor+2,w
   915     07CE  02F6               	subwf	___aldiv@dividend+2,f
   916     07CF  0873               	movf	___aldiv@divisor+3,w
   917     07D0  1C03               	skipc
   918     07D1  0F73               	incfsz	___aldiv@divisor+3,w
   919     07D2  02F7               	subwf	___aldiv@dividend+3,f
   920     07D3                     l715:
   921     07D3  1422               	bsf	___aldiv@quotient,0
   922     07D4                     l717:
   923     07D4  3001               	movlw	1
   924     07D5                     u265:
   925     07D5  1003               	clrc
   926     07D6  0CF3               	rrf	___aldiv@divisor+3,f
   927     07D7  0CF2               	rrf	___aldiv@divisor+2,f
   928     07D8  0CF1               	rrf	___aldiv@divisor+1,f
   929     07D9  0CF0               	rrf	___aldiv@divisor,f
   930     07DA  3EFF               	addlw	-1
   931     07DB  1D03               	skipz
   932     07DC  2FD5               	goto	u265
   933     07DD                     l719:
   934     07DD  3001               	movlw	1
   935     07DE  02A0               	subwf	___aldiv@counter,f
   936     07DF  1D03               	btfss	3,2
   937     07E0  2FE2               	goto	u271
   938     07E1  2FE3               	goto	u270
   939     07E2                     u271:
   940     07E2  2FAA               	goto	l709
   941     07E3                     u270:
   942     07E3                     l721:
   943     07E3  0821               	movf	___aldiv@sign,w
   944     07E4  1903               	btfsc	3,2
   945     07E5  2FE7               	goto	u281
   946     07E6  2FE8               	goto	u280
   947     07E7                     u281:
   948     07E7  2FF3               	goto	l725
   949     07E8                     u280:
   950     07E8                     l723:
   951     07E8  09A2               	comf	___aldiv@quotient,f
   952     07E9  09A3               	comf	___aldiv@quotient+1,f
   953     07EA  09A4               	comf	___aldiv@quotient+2,f
   954     07EB  09A5               	comf	___aldiv@quotient+3,f
   955     07EC  0AA2               	incf	___aldiv@quotient,f
   956     07ED  1903               	skipnz
   957     07EE  0AA3               	incf	___aldiv@quotient+1,f
   958     07EF  1903               	skipnz
   959     07F0  0AA4               	incf	___aldiv@quotient+2,f
   960     07F1  1903               	skipnz
   961     07F2  0AA5               	incf	___aldiv@quotient+3,f
   962     07F3                     l725:
   963     07F3  0825               	movf	___aldiv@quotient+3,w
   964     07F4  00F3               	movwf	?___aldiv+3
   965     07F5  0824               	movf	___aldiv@quotient+2,w
   966     07F6  00F2               	movwf	?___aldiv+2
   967     07F7  0823               	movf	___aldiv@quotient+1,w
   968     07F8  00F1               	movwf	?___aldiv+1
   969     07F9  0822               	movf	___aldiv@quotient,w
   970     07FA  00F0               	movwf	?___aldiv
   971     07FB                     l214:
   972     07FB  0008               	return
   973     07FC                     __end_of___aldiv:
   974     0002                     ___latbits      equ	2
   975     007E                     btemp           set	126	;btemp
   976     007E                     wtemp0          set	126
   977                           
   978                           	psect	config
   979                           
   980                           ;Config register CONFIG @ 0x2007
   981                           ;	Oscillator Selection bits
   982                           ;	FOSC = HS, HS oscillator
   983                           ;	Watchdog Timer Enable bit
   984                           ;	WDTE = OFF, WDT disabled
   985                           ;	Power-up Timer Enable bit
   986                           ;	PWRTE = OFF, PWRT disabled
   987                           ;	Brown-out Reset Enable bit
   988                           ;	BOREN = OFF, BOR disabled
   989                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   990                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   991                           ;	Data EEPROM Memory Code Protection bit
   992                           ;	CPD = OFF, Data EEPROM code protection off
   993                           ;	Flash Program Memory Write Enable bits
   994                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   995                           ;	In-Circuit Debugger Mode bit
   996                           ;	DEBUG = 0x1, unprogrammed default
   997                           ;	Flash Program Memory Code Protection bit
   998                           ;	CP = OFF, Code protection off
   999     2007                     	org	8199
  1000     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     25      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     538
                                             18 BANK0      7     7      0
                          _UART_Init
                        _UART_RxChar
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (1) _UART_TxChar                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           12     8      4     325
                                              6 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     302
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_RxChar
   _UART_TxChar

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      9       9     64.3%
BANK0               80     25      25     31.2%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      34      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jan 24 10:59:50 2025

                     l30 068F                       l32 0695                       l33 0698  
                     l27 06ED                       l36 0685                       l53 0760  
                     l38 068B                       l39 068D                       l48 0741  
                    l204 0777                      l214 07FB                      l701 0790  
                    l711 07B3                      l703 0798                      l713 07C5  
                    l705 079B                      l721 07E3                      l723 07E8  
                    l715 07D3                      l707 07A6                      l731 069D  
                    l725 07F3                      l717 07D4                      l709 07AA  
                    l741 06A8                      l733 06A0                      l719 07DD  
                    l743 06A9                      l735 06A3                      l751 068C  
                    l737 06A4                      l729 0699                      l745 068F  
                    l761 070B                      l691 0766                      l739 06A5  
                    l747 0696                      l771 0727                      l763 0711  
                    l755 06EE                      l693 076A                      l749 0685  
                    l773 072D                      l757 06F6                      l695 077B  
                    l775 0734                      l767 071A                      l759 0703  
                    l697 0786                      l689 0763                      l777 073A  
                    l769 0720                      l699 0788                      l779 0742  
                    u200 077B                      u201 077A                      u210 0798  
                    u211 0797                      u300 06C9                      u301 06CA  
                    u230 07AA                      u302 06CF                      u310 0695  
                    u231 07A9                      u303 06D0                      u311 0694  
                    u320 068B                      u225 079D                      u321 068A  
                    u250 07C5                      u330 0719                      u251 07C4  
                    u331 0718                      u340 0720                      u245 07AC  
                    u341 071F                      u270 07E3                      u190 076A  
                    u350 072D                      u271 07E2                      u255 07C1  
                    u191 0769                      u351 072C                      u280 07E8  
                    u360 073A                      u281 07E7                      u265 07D5  
                    u361 0739                      u290 06BF                      u295 06BA  
                    _TX9 04C6                     _CREN 00C4                     _RCIF 0065  
                   _SPEN 00C7                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     _main 06EE                     btemp 007E  
                   start 0000          __end_of___aldiv 07FC                    ?_main 0070  
                  _RCREG 001A                    _SPBRG 0099                    _PORTC 0007  
                  _TRISC 0087                    _TXREG 0019                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0763  
                 ??_main 0079             ?_UART_RxChar 0070             ?_UART_TxChar 0070  
      __end_of_UART_Init 06EE                ??___aldiv 0078  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 06EE                  ___aldiv 0763  
                __ptext1 068E                  __ptext2 0685                  __ptext3 0699  
                __ptext4 0763         ___aldiv@dividend 0074     end_of_initialization 07FC  
       ___aldiv@quotient 0022                _UART_Init 0699               main@countD 0032  
             main@countE 0034               main@countF 0036               ?_UART_Init 0026  
    start_initialization 07FC                ___latbits 0002            __pcstackBANK0 0020  
               ?___aldiv 0070              ??_UART_Init 002A            UART_TxChar@ch 0070  
        ___aldiv@divisor 0070          ___aldiv@counter 0020            ??_UART_RxChar 0070  
          ??_UART_TxChar 0070        UART_Init@baudRate 0026      __end_of_UART_RxChar 068E  
    __end_of_UART_TxChar 0699                 main@c_51 0038              _UART_RxChar 0685  
            _UART_TxChar 068E             ___aldiv@sign 0021  
